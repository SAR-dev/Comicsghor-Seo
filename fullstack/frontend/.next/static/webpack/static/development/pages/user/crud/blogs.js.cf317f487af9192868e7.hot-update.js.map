{"version":3,"file":"static/webpack/static\\development\\pages\\user\\crud\\blogs.js.cf317f487af9192868e7.hot-update.js","sources":["webpack:///./components/crud/BlogRead.js"],"sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\n\nimport { Grid, Row, Col, ButtonToolbar, Button, Icon, FlexboxGrid, Notification  } from 'rsuite';\n\nconst BlogRead = ({ username }) => {\n\tconst [ blogs, setBlogs ] = useState([]);\n\tconst [ message, setMessage ] = useState('');\n\tconst token = getCookie('token');\n\n\tuseEffect(() => {\n\t\tloadBlogs();\n\t}, []);\n\n\tconst loadBlogs = () => {\n\t\tlist(username).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetBlogs(data);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst deleteBlog = (slug) => {\n\t\tremoveBlog(slug, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetMessage(data.message);\n\t\t\t\tloadBlogs();\n\t\t\t\topen(data.message)\n\t\t\t}\n\t\t});\n\t};\n\n\tconst open = (msg) => {\n\t\tNotification['success']({\n\t\t  title: 'Success',\n\t\t  description: msg\n\t\t});\n\t  }\n\n\tconst deleteConfirm = (slug) => {\n\t\tlet answer = window.confirm('Are you sure you want to delete your blog?');\n\t\tif (answer) {\n\t\t\tdeleteBlog(slug);\n\t\t}\n\t};\n\n\tconst showUpdateButton = (blog) => {\n\t\tif (isAuth() && isAuth().role === 0) {\n\t\t\treturn (\n\t\t\t\t<Button size=\"sm\" onClick={() => Router.push(`/user/crud/${blog.slug}`)}>\n\t\t\t\t\t<Icon icon=\"edit2\" /> Edit\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else if (isAuth() && isAuth().role === 1) {\n\t\t\treturn (\n\t\t\t\t<Button size=\"sm\" onClick={() => Router.push(`/admin/crud/${blog.slug}`)}>\n\t\t\t\t\t<Icon icon=\"edit2\" /> Edit\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst showAllBlogs = () => {\n\t\treturn blogs.map((blog, i) => {\n\t\t\treturn (\n\t\t\t\t<FlexboxGrid key={i} className=\"manage-blog px-3 py-2 mb-2\">\n\t\t\t\t\t<FlexboxGrid.Item colspan={18}>\n\t\t\t\t\t\t<h4>{blog.title}</h4>\n\t\t\t\t\t\t<p className=\"writer grey-text\">\n\t\t\t\t\t\t\t<Icon icon=\"user\" className=\"pr-2\" /> {blog.postedBy.name}{' '}\n\t\t\t\t\t\t\t<Icon icon=\"calendar\" className=\"px-2\" /> {moment(blog.updatedAt).fromNow()}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t\t<FlexboxGrid.Item colspan={6}>\n\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t<Button size=\"sm\" onClick={() => deleteConfirm(blog.slug)}>\n\t\t\t\t\t\t\t\t<Icon icon=\"trash\" /> Delete\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{showUpdateButton(blog)}\n\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t</FlexboxGrid>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"container my-3\">\n\t\t\t\t<Grid fluid>\n\t\t\t\t\t<Row className=\"show-grid\">{showAllBlogs()}</Row>\n\t\t\t\t</Grid>\n\t\t\t\t{/* <div className=\"col-md-12\">\n                    {message && <div className=\"alert alert-warning\">{message}</div>}\n                    {showAllBlogs()}\n                </div> */}\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default BlogRead;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}
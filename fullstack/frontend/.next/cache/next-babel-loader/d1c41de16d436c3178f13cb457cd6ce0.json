{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\auth\\\\SigninComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\nimport { useState, useEffect } from 'react';\nimport { signin, authenticate, isAuth } from '../../actions/auth';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nconst SigninComponent = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    email: '',\n    password: '',\n    error: false,\n    checking: false,\n    message: false,\n    showForm: true\n  });\n  const {\n    email,\n    password,\n    error,\n    checking,\n    message\n  } = values;\n  const headerStyle = {\n    textAlign: 'center'\n  };\n  const subHeaderStyle = {\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingTop: 15,\n    color: 'grey'\n  };\n  useEffect(() => {\n    isAuth() && Router.replace('/');\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      checking: true,\n      error: false\n    }));\n    const user = {\n      email,\n      password\n    };\n    signin(user).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        authenticate(data, () => {\n          setValues(_objectSpread({}, values, {\n            email: '',\n            password: '',\n            checking: false,\n            error: false,\n            message: true\n          }));\n        });\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread({}, values, {\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const handleClose = () => {\n    setValues(_objectSpread({}, values, {\n      error: ''\n    }));\n  };\n\n  const pushHome = () => {\n    setValues(_objectSpread({}, values, {\n      message: ''\n    }));\n\n    if (isAuth() && isAuth().role === 1) {\n      Router.replace('/admin');\n    } else {\n      Router.replace('/user');\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    width: \"8\",\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: headerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Header, {\n    as: \"h2\",\n    icon: true,\n    color: \"purple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"home\",\n    color: \"pink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \"Comics Ghor\", __jsx(Header.Subheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: 600\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"A Canvas to Paint Your Mind Out\")), __jsx(Header.Subheader, {\n    style: subHeaderStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Welcome to Comics Ghor, a Bangladeshi website. The purpose of Comics Ghor is to create a free platform for all the Bangladeshi people, of all age, who desire to draw comics or write novels, stories or more.\")))), __jsx(Grid.Column, {\n    width: \"8\",\n    style: {\n      padding: '35px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Message, {\n    attached: true,\n    header: \"Welcome to Comics Ghor!\",\n    content: \"Fill out the form below to sign-up for a new account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(Form, {\n    className: \"attached fluid segment\",\n    onSubmit: handleSubmit,\n    loading: checking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Form.Input, {\n    value: email,\n    onChange: handleChange('email'),\n    label: \"Email\",\n    placeholder: \"Email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(Form.Input, {\n    value: password,\n    onChange: handleChange('password'),\n    label: \"Password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Icon, {\n    color: \"blue\",\n    name: \"hand point right\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), \"Do not share your sign-in credentials with others.\"), __jsx(Button, {\n    color: \"blue\",\n    type: \"submit\",\n    loading: checking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Sign In\")), __jsx(Message, {\n    attached: \"bottom\",\n    warning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"help\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), \"Don't have an account?\\xA0\", __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Create Account\"))))))), __jsx(Modal, {\n    open: error,\n    onClose: handleClose,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Sign-in Error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, error), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: handleClose,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), \" Got it\"))), __jsx(Modal, {\n    open: message,\n    onClose: pushHome,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Sign-in Successful\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"You have signed in successfully. Do not share your sign-in credentials with others.\"), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: pushHome,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), \" Got it\"))));\n};\n\nexport default SigninComponent;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/auth/SigninComponent.js"],"names":["Button","Form","Icon","Message","Grid","Header","Modal","useState","useEffect","signin","authenticate","isAuth","Link","Router","SigninComponent","values","setValues","email","password","error","checking","message","showForm","headerStyle","textAlign","subHeaderStyle","paddingLeft","paddingRight","paddingTop","color","replace","handleSubmit","e","preventDefault","user","then","data","handleChange","name","target","value","handleClose","pushHome","role","fontWeight","padding"],"mappings":"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","sourcesContent":["import { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\r\nimport { useState, useEffect } from 'react';\r\nimport { signin, authenticate, isAuth } from '../../actions/auth';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\n\r\nconst SigninComponent = () => {\r\n\tconst [values, setValues] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\terror: false,\r\n\t\tchecking: false,\r\n\t\tmessage: false,\r\n\t\tshowForm: true,\r\n\t});\r\n\r\n\tconst { email, password, error, checking, message } = values;\r\n\r\n\tconst headerStyle = {\r\n\t\ttextAlign: 'center'\r\n\t};\r\n\tconst subHeaderStyle = {\r\n\t\tpaddingLeft: 30,\r\n\t\tpaddingRight: 30,\r\n\t\tpaddingTop: 15,\r\n\t\tcolor: 'grey'\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tisAuth() && Router.replace('/')\r\n\t}, [])\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetValues({ ...values, checking: true, error: false });\r\n\t\tconst user = { email, password };\r\n\r\n\t\tsignin(user).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tauthenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        email: '',\r\n                        password: '',\r\n                        checking: false,\r\n                        error: false,\r\n                        message: true\r\n                    })\r\n                })\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (name) => (e) => {\r\n\t\tsetValues({ ...values, error: false, [name]: e.target.value });\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetValues({ ...values, error: '' });\r\n\t};\r\n\r\n\tconst pushHome = () => {\r\n\t\tsetValues({ ...values, message: '' });\r\n\t\tif (isAuth() && isAuth().role === 1) {\r\n\t\t\tRouter.replace('/admin')\r\n\t\t} else {\r\n\t\t\tRouter.replace('/user')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column width=\"8\" verticalAlign=\"middle\">\r\n\t\t\t\t\t\t<div style={headerStyle}>\r\n\t\t\t\t\t\t\t<Header as=\"h2\" icon color=\"purple\">\r\n\t\t\t\t\t\t\t\t<Icon name=\"home\" color=\"pink\" />\r\n\t\t\t\t\t\t\t\tComics Ghor\r\n\t\t\t\t\t\t\t\t<Header.Subheader><span style={{fontWeight: 600}}>A Canvas to Paint Your Mind Out</span></Header.Subheader>\r\n\t\t\t\t\t\t\t\t<Header.Subheader style={subHeaderStyle}>\r\n\t\t\t\t\t\t\t\t\tWelcome to Comics Ghor, a Bangladeshi website. The purpose of Comics Ghor is to\r\n\t\t\t\t\t\t\t\t\tcreate a free platform for all the Bangladeshi people, of all age, who desire to\r\n\t\t\t\t\t\t\t\t\tdraw comics or write novels, stories or more.\r\n\t\t\t\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width=\"8\" style={{ padding: '35px' }}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\tattached\r\n\t\t\t\t\t\t\t\theader=\"Welcome to Comics Ghor!\"\r\n\t\t\t\t\t\t\t\tcontent=\"Fill out the form below to sign-up for a new account\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form className=\"attached fluid segment\" onSubmit={handleSubmit} loading={checking}>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange('email')}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange('password')}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Message>\r\n                                    <Icon color=\"blue\" name=\"hand point right\" size=\"large\" />\r\n                                    Do not share your sign-in credentials with others.\r\n                                    </Message>\r\n\t\t\t\t\t\t\t\t<Button color=\"blue\" type=\"submit\" loading={checking}>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t<Message attached=\"bottom\" warning>\r\n\t\t\t\t\t\t\t\t<Icon name=\"help\" />\r\n\t\t\t\t\t\t\t\tDon't have an account?&nbsp;<Link href=\"/signup\"><a>Create Account</a></Link>\r\n\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t\t<Modal open={error} onClose={handleClose} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Error\" />\r\n\t\t\t\t<Modal.Content>{error}</Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={handleClose} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal open={message} onClose={pushHome} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\r\n\t\t\t\t<Modal.Content>You have signed in successfully. Do not share your sign-in credentials with others.</Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={pushHome} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default SigninComponent;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\SOCIAL MEDIA + BLOOD BANK + SHOP\\\\fullstack\\\\frontend\\\\components\\\\auth\\\\SignupComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\nimport { useState } from 'react';\nimport { signup } from '../../actions/auth';\n\nconst SignupComponent = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    checking: false,\n    message: '',\n    showForm: true,\n    ticked: false\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    checking,\n    message,\n    showForm,\n    ticked\n  } = values;\n  const headerStyle = {\n    textAlign: 'center'\n  };\n  const subHeaderStyle = {\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingTop: 15,\n    color: 'grey'\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      checking: true,\n      error: false\n    }));\n    const user = {\n      name,\n      email,\n      password\n    };\n    signup(user).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          name: '',\n          email: '',\n          password: '',\n          checking: false,\n          error: false,\n          message: data.message,\n          showForm: false\n        }));\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread({}, values, {\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const handleTicked = e => {\n    setValues(_objectSpread({}, values, {\n      ticked: e.target.checked\n    }));\n  };\n\n  const handleClose = () => {\n    setValues(_objectSpread({}, values, {\n      error: ''\n    }));\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    width: \"8\",\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: headerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Header, {\n    as: \"h2\",\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \"Comics Ghor\", __jsx(Header.Subheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"A Canvas to Paint Your Mind Out\"), __jsx(Header.Subheader, {\n    style: subHeaderStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Welcome to Comics Ghor, a Bangladeshi website. The purpose of Comics Ghor is to create a free platform for all the Bangladeshi people, of all age, who desire to draw comics or write novels, stories or more.\")))), __jsx(Grid.Column, {\n    width: \"8\",\n    style: {\n      padding: '35px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Message, {\n    attached: true,\n    header: \"Welcome to our site!\",\n    content: \"Fill out the form below to sign-up for a new account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(Form, {\n    className: \"attached fluid segment\",\n    onSubmit: handleSubmit,\n    loading: checking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Form.Input, {\n    value: name,\n    onChange: handleChange('name'),\n    label: \"Username\",\n    placeholder: \"Username\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(Form.Input, {\n    value: email,\n    onChange: handleChange('email'),\n    label: \"Email\",\n    placeholder: \"Email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(Form.Input, {\n    value: password,\n    onChange: handleChange('password'),\n    label: \"Password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(Form.Checkbox, {\n    inline: true,\n    label: \"I agree to the terms and conditions\",\n    checked: ticked,\n    onChange: handleTicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(Button, {\n    color: \"blue\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Sign Up\")), __jsx(Message, {\n    attached: \"bottom\",\n    warning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"help\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \"Already signed up?\\xA0\", __jsx(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Sign In here\"), \"\\xA0instead.\"))))), __jsx(Modal, {\n    open: error,\n    onClose: handleClose,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Signup Error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, error), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: handleClose,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), \" Got it\"))));\n};\n\nexport default SignupComponent;","map":{"version":3,"sources":["E:/Projects/SOCIAL MEDIA + BLOOD BANK + SHOP/fullstack/frontend/components/auth/SignupComponent.js"],"names":["Button","Form","Icon","Message","Grid","Header","Modal","useState","signup","SignupComponent","values","setValues","name","email","password","error","checking","message","showForm","ticked","headerStyle","textAlign","subHeaderStyle","paddingLeft","paddingRight","paddingTop","color","handleSubmit","e","preventDefault","user","then","data","handleChange","target","value","handleTicked","checked","handleClose","padding"],"mappings":"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","sourcesContent":["import { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\r\nimport { useState } from 'react';\r\nimport { signup } from '../../actions/auth';\r\n\r\nconst SignupComponent = () => {\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\terror: '',\r\n\t\tchecking: false,\r\n\t\tmessage: '',\r\n\t\tshowForm: true,\r\n\t\tticked: false\r\n\t})\r\n\r\n\tconst { name, email, password, error, checking, message, showForm, ticked } = values\r\n\r\n\tconst headerStyle = {\r\n\t\ttextAlign: 'center'\r\n\t}\r\n\tconst subHeaderStyle = {\r\n\t\tpaddingLeft: 30,\r\n\t\tpaddingRight: 30,\r\n\t\tpaddingTop: 15,\r\n\t\tcolor: 'grey'\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetValues({ ...values, checking: true, error: false })\r\n\t\tconst user = { name, email, password }\r\n\r\n\t\tsignup(user).then(data => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error })\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({ ...values, name: '', email: '', password: '', checking: false, error: false, message: data.message, showForm: false })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tconst handleChange = name => (e) => {\r\n\t\tsetValues({ ...values, error: false, [name]: e.target.value })\r\n\t}\r\n\r\n\tconst handleTicked = (e) => {\r\n\t\tsetValues({ ...values, ticked: e.target.checked })\r\n\t}\r\n\r\n\tconst handleClose = () => { setValues({ ...values, error: '' }) }\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column width=\"8\" verticalAlign='middle'>\r\n\t\t\t\t\t\t<div style={headerStyle}>\r\n\t\t\t\t\t\t\t<Header as=\"h2\" icon>\r\n\t\t\t\t\t\t\t\t<Icon name=\"home\" />\r\n\t\t\t\t\t\t\t\tComics Ghor\r\n\t\t\t\t\t\t<Header.Subheader>\r\n\t\t\t\t\t\t\t\t\tA Canvas to Paint Your Mind Out\r\n\t\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t\t\t\t\t<Header.Subheader style={subHeaderStyle}>\r\n\t\t\t\t\t\t\t\t\tWelcome to Comics Ghor, a Bangladeshi website. The purpose of Comics Ghor is to create a free platform for all the Bangladeshi people, of all age, who desire to draw comics or write novels, stories or more.\r\n\t\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width=\"8\" style={{ padding: '35px' }}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\tattached\r\n\t\t\t\t\t\t\t\theader=\"Welcome to our site!\"\r\n\t\t\t\t\t\t\t\tcontent=\"Fill out the form below to sign-up for a new account\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form className=\"attached fluid segment\" onSubmit={handleSubmit} loading={checking}>\r\n\t\t\t\t\t\t\t\t<Form.Input value={name} onChange={handleChange('name')} label=\"Username\" placeholder=\"Username\" type=\"text\" />\r\n\t\t\t\t\t\t\t\t<Form.Input value={email} onChange={handleChange('email')} label=\"Email\" placeholder=\"Email\" type=\"email\" />\r\n\t\t\t\t\t\t\t\t<Form.Input value={password} onChange={handleChange('password')} label=\"Password\" type=\"password\" />\r\n\t\t\t\t\t\t\t\t<Form.Checkbox inline label=\"I agree to the terms and conditions\" checked={ticked} onChange={handleTicked} />\r\n\t\t\t\t\t\t\t\t<Button color=\"blue\" type='submit'>Sign Up</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t<Message attached=\"bottom\" warning>\r\n\t\t\t\t\t\t\t\t<Icon name=\"help\" />\r\n\t\t\t\t\t\t\t\tAlready signed up?&nbsp;<a href=\"#\">Sign In here</a>&nbsp;instead.\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t\t<Modal\r\n\t\t\t\topen={error}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tbasic\r\n\t\t\t\tsize='tiny'\r\n\t\t\t>\r\n\t\t\t\t<Header icon='browser' content='Signup Error' />\r\n\t\t\t\t<Modal.Content>\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color='green' onClick={handleClose} inverted>\r\n\t\t\t\t\t\t<Icon name='checkmark' /> Got it\r\n          </Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default SignupComponent;\r\n"]},"metadata":{},"sourceType":"module"}
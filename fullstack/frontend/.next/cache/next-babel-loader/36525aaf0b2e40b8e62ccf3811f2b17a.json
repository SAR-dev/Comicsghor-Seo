{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\auth\\\\SigninComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\nimport { useState, useEffect } from 'react';\nimport { signin, authenticate, isAuth } from '../../actions/auth';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, Icon } from 'rsuite';\n\nconst SigninComponent = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    email: '',\n    password: '',\n    error: false,\n    checking: false,\n    message: false,\n    showForm: true\n  });\n  const {\n    email,\n    password,\n    error,\n    checking,\n    message\n  } = values;\n  const headerStyle = {\n    textAlign: 'center'\n  };\n  const subHeaderStyle = {\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingTop: 15,\n    color: 'grey'\n  };\n  useEffect(() => {\n    isAuth() && Router.replace('/');\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      checking: true,\n      error: false\n    }));\n    const user = {\n      email,\n      password\n    };\n    signin(user).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        authenticate(data, () => {\n          setValues(_objectSpread({}, values, {\n            email: '',\n            password: '',\n            checking: false,\n            error: false,\n            message: true\n          }));\n        });\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread({}, values, {\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const handleClose = () => {\n    setValues(_objectSpread({}, values, {\n      error: ''\n    }));\n  };\n\n  const pushHome = () => {\n    setValues(_objectSpread({}, values, {\n      message: ''\n    }));\n\n    if (isAuth() && isAuth().role === 1) {\n      Router.replace('/admin');\n    } else {\n      Router.replace('/user');\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(Form, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Email\"), __jsx(FormControl, {\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, /\\S+@\\S+\\.\\S+/.test(email) ? __jsx(Icon, {\n    icon: \"check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }) : __jsx(Icon, {\n    icon: \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Password\"), __jsx(FormControl, {\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(ButtonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Button, {\n    appearance: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Submit\"), __jsx(Button, {\n    appearance: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Cancel\")))));\n};\n\nexport default SigninComponent;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/auth/SigninComponent.js"],"names":["useState","useEffect","signin","authenticate","isAuth","Link","Router","Form","FormGroup","FormControl","ControlLabel","HelpBlock","Icon","SigninComponent","values","setValues","email","password","error","checking","message","showForm","headerStyle","textAlign","subHeaderStyle","paddingLeft","paddingRight","paddingTop","color","replace","handleSubmit","e","preventDefault","user","then","data","handleChange","name","target","value","handleClose","pushHome","role","test"],"mappings":"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","sourcesContent":["// import { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\r\nimport { useState, useEffect } from 'react';\r\nimport { signin, authenticate, isAuth } from '../../actions/auth';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\n\r\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, Icon } from 'rsuite';\r\n\r\nconst SigninComponent = () => {\r\n\tconst [ values, setValues ] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\terror: false,\r\n\t\tchecking: false,\r\n\t\tmessage: false,\r\n\t\tshowForm: true\r\n\t});\r\n\r\n\tconst { email, password, error, checking, message } = values;\r\n\r\n\tconst headerStyle = {\r\n\t\ttextAlign: 'center'\r\n\t};\r\n\tconst subHeaderStyle = {\r\n\t\tpaddingLeft: 30,\r\n\t\tpaddingRight: 30,\r\n\t\tpaddingTop: 15,\r\n\t\tcolor: 'grey'\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tisAuth() && Router.replace('/');\r\n\t}, []);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetValues({ ...values, checking: true, error: false });\r\n\t\tconst user = { email, password };\r\n\r\n\t\tsignin(user).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tauthenticate(data, () => {\r\n\t\t\t\t\tsetValues({\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\temail: '',\r\n\t\t\t\t\t\tpassword: '',\r\n\t\t\t\t\t\tchecking: false,\r\n\t\t\t\t\t\terror: false,\r\n\t\t\t\t\t\tmessage: true\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (name) => (e) => {\r\n\t\tsetValues({ ...values, error: false, [name]: e.target.value });\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetValues({ ...values, error: '' });\r\n\t};\r\n\r\n\tconst pushHome = () => {\r\n\t\tsetValues({ ...values, message: '' });\r\n\t\tif (isAuth() && isAuth().role === 1) {\r\n\t\t\tRouter.replace('/admin');\r\n\t\t} else {\r\n\t\t\tRouter.replace('/user');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Form fluid>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Email</ControlLabel>\r\n\t\t\t\t\t<FormControl name=\"email\" type=\"email\" />\r\n\t\t\t\t\t<HelpBlock>{/\\S+@\\S+\\.\\S+/.test(email) ? <Icon icon='check' /> : <Icon icon='close' />}</HelpBlock>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t<FormControl name=\"password\" type=\"password\" />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t<Button appearance=\"primary\">Submit</Button>\r\n\t\t\t\t\t\t<Button appearance=\"default\">Cancel</Button>\r\n\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\t\t\t{/* <Grid>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column width=\"8\" verticalAlign=\"middle\">\r\n\t\t\t\t\t\t<div style={headerStyle}>\r\n\t\t\t\t\t\t\t<Header as=\"h2\" icon color=\"purple\">\r\n\t\t\t\t\t\t\t\t<Icon name=\"home\" color=\"pink\" />\r\n\t\t\t\t\t\t\t\tComics Ghor\r\n\t\t\t\t\t\t\t\t<Header.Subheader><span style={{fontWeight: 600}}>A Canvas to Paint Your Mind Out</span></Header.Subheader>\r\n\t\t\t\t\t\t\t\t<Header.Subheader style={subHeaderStyle}>\r\n\t\t\t\t\t\t\t\t\tWelcome to Comics Ghor, a Bangladeshi website. The purpose of Comics Ghor is to\r\n\t\t\t\t\t\t\t\t\tcreate a free platform for all the Bangladeshi people, of all age, who desire to\r\n\t\t\t\t\t\t\t\t\tdraw comics or write novels, stories or more.\r\n\t\t\t\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width=\"8\" style={{ padding: '35px' }}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\tattached\r\n\t\t\t\t\t\t\t\theader=\"Welcome to Comics Ghor!\"\r\n\t\t\t\t\t\t\t\tcontent=\"Fill out the form below to sign-up for a new account\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form className=\"attached fluid segment\" onSubmit={handleSubmit} loading={checking}>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange('email')}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange('password')}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Message>\r\n                                    <Icon color=\"blue\" name=\"hand point right\" size=\"large\" />\r\n                                    Do not share your sign-in credentials with others.\r\n                                    </Message>\r\n\t\t\t\t\t\t\t\t<Button color=\"blue\" type=\"submit\" loading={checking}>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t<Message attached=\"bottom\" warning>\r\n\t\t\t\t\t\t\t\t<Icon name=\"help\" />\r\n\t\t\t\t\t\t\t\tDon't have an account?&nbsp;<Link href=\"/signup\"><a>Create Account</a></Link>\r\n\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t\t<Modal open={error} onClose={handleClose} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Error\" />\r\n\t\t\t\t<Modal.Content>{error}</Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={handleClose} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal open={message} onClose={pushHome} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\r\n\t\t\t\t<Modal.Content>You have signed in successfully. Do not share your sign-in credentials with others.</Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={pushHome} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal> */}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default SigninComponent;\r\n"]},"metadata":{},"sourceType":"module"}
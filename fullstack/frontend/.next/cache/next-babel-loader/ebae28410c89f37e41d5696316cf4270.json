{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\SOCIAL MEDIA + BLOOD BANK + SHOP\\\\fullstack\\\\frontend\\\\components\\\\crud\\\\BlogCreate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect, useRef } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { imageupload } from '../../actions/imgur';\nimport { getTags } from '../../actions/tag';\nimport { createBlog } from '../../actions/blog';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\nimport '../../node_modules/react-quill/dist/quill.snow.css';\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\nimport { Form, Input, Button, Container, Grid, Dropdown, Icon, Modal, Header } from 'semantic-ui-react';\n\nconst CreateBlog = ({\n  router\n}) => {\n  const blogFromLS = () => {\n    if (true) {\n      return false;\n    }\n\n    if (localStorage.getItem('blog')) {\n      return JSON.parse(localStorage.getItem('blog'));\n    } else {\n      return false;\n    }\n  };\n\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  const {\n    0: body,\n    1: setBody\n  } = useState(blogFromLS());\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    error: '',\n    sizeError: '',\n    success: '',\n    formData: '',\n    title: '',\n    hidePublishButton: false\n  });\n  const {\n    error,\n    sizeError,\n    success,\n    formData,\n    title,\n    hidePublishButton\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    setValues(_objectSpread({}, values, {\n      formData: new FormData()\n    }));\n    initCategories();\n    initTags();\n  }, [router]);\n\n  const initCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        const items = [];\n        data.forEach((item, i) => {\n          items[i] = {\n            key: i,\n            value: item._id,\n            text: item.name\n          };\n        });\n        setCategories(items);\n      }\n    });\n  };\n\n  const initTags = () => {\n    getTags().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        const items = [];\n        data.forEach((item, i) => {\n          items[i] = {\n            key: i,\n            value: item._id,\n            text: item.name\n          };\n        });\n        setTags(items);\n      }\n    });\n  };\n\n  const publishBlog = e => {\n    e.preventDefault();\n    createBlog(formData, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          title: '',\n          error: '',\n          success: `A new blog titled \"${data.title}\" is created`\n        }));\n        setBody('');\n        setCategories([]);\n        setTags([]);\n      }\n    });\n  };\n\n  const {\n    0: thumbnail,\n    1: setThumbnail\n  } = useState([]);\n\n  const handleChange = name => e => {\n    const value = name === 'photo' ? e.target.files[0] : e.target.value;\n\n    if (name === 'photo') {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        setThumbnail(reader.result);\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    }\n\n    formData.set(name, value);\n    setValues(_objectSpread({}, values, {\n      [name]: value,\n      formData,\n      error: ''\n    }));\n  };\n\n  const {\n    0: imgur,\n    1: setImgur\n  } = useRef();\n\n  const handleImageArray = event => {\n    var fileInput = false;\n\n    if (!event.target.files[0] || event.target.files[0].size > 19922944) {\n      setValues(_objectSpread({}, values, {\n        error: 'Image size is too large!'\n      }));\n    }\n\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      var img = event.target.files[0];\n      imageupload(img).then(res => {\n        let imgArray = [];\n        let imageArray = formData.get('image');\n        console.log(imgeArray);\n        Array.isArray(imageArray) ? imgArray = imageArray : '';\n        console.log(imgArray);\n        imgArray.push(res.data.id);\n        formData.set('image', imgArray);\n      });\n    }\n  };\n\n  const handleBody = e => {\n    setBody(e);\n    formData.set('body', e);\n\n    if (false) {\n      localStorage.setItem('blog', JSON.stringify(e));\n    }\n  };\n\n  const {\n    0: tempTags\n  } = useRef();\n\n  const handleTagsChange = (e, {\n    value\n  }) => {\n    formData.set('tags', value);\n  };\n\n  const {\n    0: tempCategories\n  } = useRef();\n\n  const handleCategoriesChange = (e, {\n    value\n  }) => {\n    formData.set('categories', value);\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    columns: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(Form, {\n    onSubmit: publishBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"Write an awesome title...\",\n    value: title,\n    onChange: handleChange('title'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), __jsx(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(ReactQuill, {\n    modules: QuillModules,\n    formats: QuillFormats,\n    value: body,\n    placeholder: \"Write something amazing...\",\n    onChange: handleBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), __jsx(Grid, {\n    columns: \"equal\",\n    style: {\n      paddingBottom: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    columns: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(Dropdown, {\n    placeholder: \"Tags\",\n    fluid: true,\n    multiple: true,\n    search: true,\n    selection: true,\n    options: tags,\n    value: tempTags,\n    onChange: handleTagsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), __jsx(Grid.Column, {\n    columns: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(Dropdown, {\n    placeholder: \"Categories\",\n    fluid: true,\n    search: true,\n    selection: true,\n    options: categories,\n    value: tempCategories,\n    onChange: handleCategoriesChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  })))), __jsx(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, thumbnail.length > 10 && __jsx(\"img\", {\n    className: \"thumbnailImage\",\n    src: thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    class: \"choose_file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"twitter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), \" Upload Thumbnail\"), __jsx(\"input\", {\n    onChange: handleChange('photo'),\n    type: \"file\",\n    accept: \"image/*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }))), __jsx(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    class: \"choose_file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"twitter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), \" Upload Images\"), __jsx(\"input\", {\n    onChange: handleImageArray,\n    type: \"file\",\n    accept: \"image/*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }))))), __jsx(Button, {\n    type: \"submit\",\n    primary: true,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Publish\")))), __jsx(Modal, {\n    open: error,\n    onClose: () => setValues(_objectSpread({}, values, {\n      error: ''\n    })),\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Sign-in Successful\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, error), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: () => setValues(_objectSpread({}, values, {\n      error: ''\n    })),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), \" Got it\"))), __jsx(Modal, {\n    open: success,\n    onClose: () => setValues(_objectSpread({}, values, {\n      success: ''\n    })),\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Sign-in Successful\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, success), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: () => setValues(_objectSpread({}, values, {\n      success: ''\n    })),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), \" Got it\"))));\n};\n\nexport default withRouter(CreateBlog);","map":{"version":3,"sources":["E:/Projects/SOCIAL MEDIA + BLOOD BANK + SHOP/fullstack/frontend/components/crud/BlogCreate.js"],"names":["Link","useState","useEffect","useRef","Router","dynamic","withRouter","getCookie","isAuth","getCategories","imageupload","getTags","createBlog","ReactQuill","ssr","QuillModules","QuillFormats","Form","Input","Button","Container","Grid","Dropdown","Icon","Modal","Header","CreateBlog","router","blogFromLS","localStorage","getItem","JSON","parse","categories","setCategories","tags","setTags","body","setBody","values","setValues","error","sizeError","success","formData","title","hidePublishButton","token","FormData","initCategories","initTags","then","data","items","forEach","item","i","key","value","_id","text","name","publishBlog","e","preventDefault","thumbnail","setThumbnail","handleChange","target","files","reader","FileReader","onloadend","result","readAsDataURL","event","set","imgur","setImgur","handleImageArray","fileInput","size","img","res","imgArray","imageArray","get","console","log","imgeArray","Array","isArray","push","id","handleBody","setItem","stringify","tempTags","handleTagsChange","tempCategories","handleCategoriesChange","paddingBottom","length","width"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect, useRef } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { imageupload } from '../../actions/imgur';\nimport { getTags } from '../../actions/tag';\nimport { createBlog } from '../../actions/blog';\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\nimport '../../node_modules/react-quill/dist/quill.snow.css';\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\nimport { Form, Input, Button, Container, Grid, Dropdown, Icon, Modal, Header } from 'semantic-ui-react';\n\nconst CreateBlog = ({ router }) => {\n\tconst blogFromLS = () => {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (localStorage.getItem('blog')) {\n\t\t\treturn JSON.parse(localStorage.getItem('blog'));\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst [ categories, setCategories ] = useState([]);\n\tconst [ tags, setTags ] = useState([]);\n\n\tconst [ body, setBody ] = useState(blogFromLS());\n\tconst [ values, setValues ] = useState({\n\t\terror: '',\n\t\tsizeError: '',\n\t\tsuccess: '',\n\t\tformData: '',\n\t\ttitle: '',\n\t\thidePublishButton: false\n\t});\n\n\tconst { error, sizeError, success, formData, title, hidePublishButton } = values;\n\tconst token = getCookie('token');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetValues({ ...values, formData: new FormData() });\n\t\t\tinitCategories();\n\t\t\tinitTags();\n\t\t},\n\t\t[ router ]\n\t);\n\n\tconst initCategories = () => {\n\t\tgetCategories().then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t} else {\n\t\t\t\tconst items = [];\n\t\t\t\tdata.forEach((item, i) => {\n\t\t\t\t\titems[i] = {\n\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\ttext: item.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetCategories(items);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst initTags = () => {\n\t\tgetTags().then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t} else {\n\t\t\t\tconst items = [];\n\t\t\t\tdata.forEach((item, i) => {\n\t\t\t\t\titems[i] = {\n\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\ttext: item.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetTags(items);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst publishBlog = (e) => {\n\t\te.preventDefault();\n\t\tcreateBlog(formData, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t} else {\n\t\t\t\tsetValues({ ...values, title: '', error: '', success: `A new blog titled \"${data.title}\" is created` });\n\t\t\t\tsetBody('');\n\t\t\t\tsetCategories([]);\n\t\t\t\tsetTags([]);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst [ thumbnail, setThumbnail ] = useState([]);\n\n\tconst handleChange = (name) => (e) => {\n\t\tconst value = name === 'photo' ? e.target.files[0] : e.target.value;\n\t\tif (name === 'photo') {\n\t\t\tlet reader = new FileReader();\n\t\t\treader.onloadend = () => {\n\t\t\t\tsetThumbnail(reader.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(event.target.files[0]);\n\t\t}\n\t\tformData.set(name, value);\n\t\tsetValues({ ...values, [name]: value, formData, error: '' });\n\t};\n\n\tconst [ imgur, setImgur ] = useRef();\n\n\tconst handleImageArray = (event) => {\n\t\tvar fileInput = false;\n\t\tif (!event.target.files[0] || event.target.files[0].size > 19922944) {\n\t\t\tsetValues({ ...values, error: 'Image size is too large!' });\n\t\t}\n\t\tif (event.target.files[0]) {\n\t\t\tfileInput = true;\n\t\t}\n\t\tif (fileInput) {\n\t\t\tvar img = event.target.files[0];\n\t\t\timageupload(img).then((res) => {\n\t\t\t\tlet imgArray = []\n\t\t\t\tlet imageArray = formData.get('image')\n\n\t\t\t\tconsole.log(imgeArray)\n\t\t\t\tArray.isArray(imageArray) ? imgArray = imageArray : '' \n\n\t\t\t\tconsole.log(imgArray)\n\t\t\t\timgArray.push(res.data.id);\n\n\t\t\t\tformData.set('image', imgArray);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleBody = (e) => {\n\t\tsetBody(e);\n\t\tformData.set('body', e);\n\t\tif (typeof window !== 'undefined') {\n\t\t\tlocalStorage.setItem('blog', JSON.stringify(e));\n\t\t}\n\t};\n\n\tconst [ tempTags ] = useRef();\n\n\tconst handleTagsChange = (e, { value }) => {\n\t\tformData.set('tags', value);\n\t};\n\n\tconst [ tempCategories ] = useRef();\n\n\tconst handleCategoriesChange = (e, { value }) => {\n\t\tformData.set('categories', value);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column columns={16}>\n\t\t\t\t\t<Form onSubmit={publishBlog}>\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<Grid.Column width={12}>\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write an awesome title...\"\n\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('title')}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<ReactQuill\n\t\t\t\t\t\t\t\t\t\tmodules={QuillModules}\n\t\t\t\t\t\t\t\t\t\tformats={QuillFormats}\n\t\t\t\t\t\t\t\t\t\tvalue={body}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write something amazing...\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleBody}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Grid columns=\"equal\" style={{ paddingBottom: 25 }}>\n\t\t\t\t\t\t\t\t\t<Grid.Column columns={8}>\n\t\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Tags\"\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\t\t\toptions={tags}\n\t\t\t\t\t\t\t\t\t\t\tvalue={tempTags}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTagsChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t<Grid.Column columns={8}>\n\t\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Categories\"\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\t\t\toptions={categories}\n\t\t\t\t\t\t\t\t\t\t\tvalue={tempCategories}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleCategoriesChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<Grid.Column width={4}>\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t{thumbnail.length > 10 && <img className=\"thumbnailImage\" src={thumbnail} />}\n\t\t\t\t\t\t\t\t\t<div class=\"choose_file\">\n\t\t\t\t\t\t\t\t\t\t<Button color=\"twitter\">\n\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"image\" /> Upload Thumbnail\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<div class=\"choose_file\">\n\t\t\t\t\t\t\t\t\t\t<Button color=\"twitter\">\n\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"image\" /> Upload Images\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<input onChange={handleImageArray} type=\"file\" accept=\"image/*\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Button type=\"submit\" primary style={{ width: '100%' }}>\n\t\t\t\t\t\t\tPublish\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\n\t\t\t<Modal open={error} onClose={() => setValues({ ...values, error: '' })} basic size=\"tiny\">\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\n\t\t\t\t<Modal.Content>{error}</Modal.Content>\n\t\t\t\t<Modal.Actions>\n\t\t\t\t\t<Button color=\"green\" onClick={() => setValues({ ...values, error: '' })} inverted>\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Actions>\n\t\t\t</Modal>\n\n\t\t\t<Modal open={success} onClose={() => setValues({ ...values, success: '' })} basic size=\"tiny\">\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\n\t\t\t\t<Modal.Content>{success}</Modal.Content>\n\t\t\t\t<Modal.Actions>\n\t\t\t\t\t<Button color=\"green\" onClick={() => setValues({ ...values, success: '' })} inverted>\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Actions>\n\t\t\t</Modal>\n\t\t</Container>\n\t);\n};\n\nexport default withRouter(CreateBlog);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\crud\\\\Category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { getCookie } from '../../actions/auth';\nimport { create, getCategories, removeCategory } from '../../actions/category';\nimport { Form, Button, Icon, List, Grid, Message, Modal, Header } from 'semantic-ui-react';\n\nconst Category = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: false,\n    reload: false\n  });\n  const {\n    name,\n    error,\n    success,\n    categories,\n    removed,\n    reload\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    loadCategories();\n  }, [reload]);\n\n  const loadCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setValues(_objectSpread({}, values, {\n          categories: data\n        }));\n      }\n    });\n  };\n\n  const showCategories = () => {\n    return categories.map((c, i) => {\n      return __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Button, {\n        icon: true,\n        labelPosition: \"right\",\n        style: {\n          width: 180\n        },\n        onClick: () => deleteConfirm(c.slug),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(Icon, {\n        name: \"trash alternate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), c.name)));\n    });\n  };\n\n  const deleteConfirm = slug => {\n    let answer = window.confirm('Are you sure you want to delete this category?');\n\n    if (answer) {\n      deleteCategory(slug);\n    }\n  };\n\n  const deleteCategory = slug => {\n    removeCategory(slug, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setValues(_objectSpread({}, values, {\n          error: false,\n          success: false,\n          name: '',\n          removed: !removed,\n          reload: !reload\n        }));\n      }\n    });\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    create({\n      name\n    }, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          success: false\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          error: false,\n          success: true,\n          name: '',\n          removed: false,\n          reload: !reload\n        }));\n      }\n    });\n  };\n\n  const handleChange = e => {\n    setValues(_objectSpread({}, values, {\n      name: e.target.value,\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  const newCategoryFom = () => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Form, {\n    onSubmit: clickSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Form.Input, {\n    placeholder: \"Add a new category\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(Form.Button, {\n    content: \"Add\",\n    icon: \"plus\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))));\n\n  const handleClose = () => {\n    setValues(_objectSpread({}, values, {\n      error: false,\n      success: false,\n      removed: false\n    }));\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Message, {\n    info: true,\n    icon: \"inbox\",\n    header: \"Categories\",\n    content: \"Press enter or click add to add a category. Click a category to remove it.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), newCategoryFom(), __jsx(List, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, showCategories())))), __jsx(Modal, {\n    open: error,\n    onClose: handleClose,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Category already exists!\")), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: handleClose,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), \" Got it\"))), __jsx(Modal, {\n    open: success,\n    onClose: handleClose,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Successful\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Category created successfully!\")), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: handleClose,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), \" Got it\"))), __jsx(Modal, {\n    open: removed,\n    onClose: handleClose,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Successful\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Category removed successfully!\")), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: handleClose,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), \" Got it\"))));\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/crud/Category.js"],"names":["useState","useEffect","getCookie","create","getCategories","removeCategory","Form","Button","Icon","List","Grid","Message","Modal","Header","Category","values","setValues","name","error","success","categories","removed","reload","token","loadCategories","then","data","console","log","showCategories","map","c","i","width","deleteConfirm","slug","answer","window","confirm","deleteCategory","clickSubmit","e","preventDefault","handleChange","target","value","newCategoryFom","handleClose"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getCookie } from '../../actions/auth';\r\nimport { create, getCategories, removeCategory } from '../../actions/category';\r\nimport { Form, Button, Icon, List, Grid, Message, Modal, Header } from 'semantic-ui-react';\r\n\r\nconst Category = () => {\r\n\tconst [ values, setValues ] = useState({\r\n\t\tname: '',\r\n\t\terror: false,\r\n\t\tsuccess: false,\r\n\t\tcategories: [],\r\n\t\tremoved: false,\r\n\t\treload: false\r\n\t});\r\n\r\n\tconst { name, error, success, categories, removed, reload } = values;\r\n\tconst token = getCookie('token');\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tloadCategories();\r\n\t\t},\r\n\t\t[ reload ]\r\n\t);\r\n\r\n\tconst loadCategories = () => {\r\n\t\tgetCategories().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(data.error);\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({ ...values, categories: data });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst showCategories = () => {\r\n\t\treturn categories.map((c, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<List.Item>\r\n\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t<Button icon labelPosition=\"right\" style={{ width: 180 }} onClick={() => deleteConfirm(c.slug)}>\r\n\t\t\t\t\t\t\t<Icon name=\"trash alternate\" />\r\n\t\t\t\t\t\t\t{c.name}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</List.Content>\r\n\t\t\t\t</List.Item>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst deleteConfirm = (slug) => {\r\n\t\tlet answer = window.confirm('Are you sure you want to delete this category?');\r\n\t\tif (answer) {\r\n\t\t\tdeleteCategory(slug);\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteCategory = (slug) => {\r\n\t\tremoveCategory(slug, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(data.error);\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({ ...values, error: false, success: false, name: '', removed: !removed, reload: !reload });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst clickSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcreate({ name }, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error, success: false });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({ ...values, error: false, success: true, name: '', removed: false, reload: !reload });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetValues({ ...values, name: e.target.value, error: false, success: false, removed: '' });\r\n\t};\r\n\r\n\tconst newCategoryFom = () => (\r\n\t\t<div>\r\n\t\t\t<Form onSubmit={clickSubmit}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Input placeholder=\"Add a new category\" value={name} onChange={handleChange} />\r\n\t\t\t\t\t<Form.Button content=\"Add\" icon=\"plus\" type=\"submit\" />\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetValues({ ...values, error: false, success: false, removed: false});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tinfo\r\n\t\t\t\t\t\t\ticon=\"inbox\"\r\n\t\t\t\t\t\t\theader=\"Categories\"\r\n\t\t\t\t\t\t\tcontent=\"Press enter or click add to add a category. Click a category to remove it.\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{newCategoryFom()}\r\n\t\t\t\t\t\t<List verticalAlign='middle'>\r\n\t\t\t\t\t\t\t{showCategories()}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t\t<Modal open={error} onClose={handleClose} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Error\" />\r\n\t\t\t\t<Modal.Content><h3>Category already exists!</h3></Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={handleClose} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal open={success} onClose={handleClose} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Successful\" />\r\n\t\t\t\t<Modal.Content><h3>Category created successfully!</h3></Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={handleClose} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal open={removed} onClose={handleClose} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Successful\" />\r\n\t\t\t\t<Modal.Content><h3>Category removed successfully!</h3></Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={handleClose} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}
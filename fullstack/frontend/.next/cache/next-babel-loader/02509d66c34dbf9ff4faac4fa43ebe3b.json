{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\crud\\\\BlogRead.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\nimport { Grid, Row, Col, ButtonToolbar, Button, Icon, FlexboxGrid, Notification } from 'rsuite';\n\nconst BlogRead = ({\n  username\n}) => {\n  const {\n    0: blogs,\n    1: setBlogs\n  } = useState([]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const token = getCookie('token');\n  useEffect(() => {\n    loadBlogs();\n  }, []);\n\n  const loadBlogs = () => {\n    list(username).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setBlogs(data);\n      }\n    });\n  };\n\n  const deleteBlog = slug => {\n    removeBlog(slug, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setMessage(data.message);\n        loadBlogs();\n        open(data.message);\n      }\n    });\n  };\n\n  const open = msg => {\n    Notification['success']({\n      title: 'success',\n      description: msg\n    });\n  };\n\n  const deleteConfirm = slug => {\n    let answer = window.confirm('Are you sure you want to delete your blog?');\n\n    if (answer) {\n      deleteBlog(slug);\n    }\n  };\n\n  const showUpdateButton = blog => {\n    if (isAuth() && isAuth().role === 0) {\n      return __jsx(Link, {\n        href: `/user/crud/${blog.slug}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"ml-2 btn btn-sm btn-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Update\"));\n    } else if (isAuth() && isAuth().role === 1) {\n      return __jsx(Link, {\n        href: `/admin/crud/${blog.slug}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"ml-2 btn btn-sm btn-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Update\"));\n    }\n  };\n\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => {\n      return __jsx(FlexboxGrid, {\n        key: i,\n        className: \"manage-blog px-3 py-2 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(FlexboxGrid.Item, {\n        colspan: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, blog.title), __jsx(\"p\", {\n        className: \"writer grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(Icon, {\n        icon: \"user\",\n        className: \"pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \" \", blog.postedBy.name, ' ', __jsx(Icon, {\n        icon: \"calendar\",\n        className: \"px-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \" \", moment(blog.updatedAt).fromNow())), __jsx(FlexboxGrid.Item, {\n        colspan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(Button, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, __jsx(Icon, {\n        icon: \"edit2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \" Edit\"), __jsx(Button, {\n        size: \"sm\",\n        onClick: () => deleteConfirm(blog.slug),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __jsx(Icon, {\n        icon: \"trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \" Delete\"))));\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Grid, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, showAllBlogs()))));\n};\n\nexport default BlogRead;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/crud/BlogRead.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","list","removeBlog","moment","Grid","Row","Col","ButtonToolbar","Button","Icon","FlexboxGrid","Notification","BlogRead","username","blogs","setBlogs","message","setMessage","token","loadBlogs","then","data","error","console","log","deleteBlog","slug","open","msg","title","description","deleteConfirm","answer","window","confirm","showUpdateButton","blog","role","showAllBlogs","map","i","postedBy","name","updatedAt","fromNow"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\n\nimport { Grid, Row, Col, ButtonToolbar, Button, Icon, FlexboxGrid, Notification  } from 'rsuite';\n\nconst BlogRead = ({ username }) => {\n\tconst [ blogs, setBlogs ] = useState([]);\n\tconst [ message, setMessage ] = useState('');\n\tconst token = getCookie('token');\n\n\tuseEffect(() => {\n\t\tloadBlogs();\n\t}, []);\n\n\tconst loadBlogs = () => {\n\t\tlist(username).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetBlogs(data);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst deleteBlog = (slug) => {\n\t\tremoveBlog(slug, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetMessage(data.message);\n\t\t\t\tloadBlogs();\n\t\t\t\topen(data.message)\n\t\t\t}\n\t\t});\n\t};\n\n\tconst open = (msg) => {\n\t\tNotification['success']({\n\t\t  title: 'success',\n\t\t  description: msg\n\t\t});\n\t  }\n\n\tconst deleteConfirm = (slug) => {\n\t\tlet answer = window.confirm('Are you sure you want to delete your blog?');\n\t\tif (answer) {\n\t\t\tdeleteBlog(slug);\n\t\t}\n\t};\n\n\tconst showUpdateButton = (blog) => {\n\t\tif (isAuth() && isAuth().role === 0) {\n\t\t\treturn (\n\t\t\t\t<Link href={`/user/crud/${blog.slug}`}>\n\t\t\t\t\t<a className=\"ml-2 btn btn-sm btn-warning\">Update</a>\n\t\t\t\t</Link>\n\t\t\t);\n\t\t} else if (isAuth() && isAuth().role === 1) {\n\t\t\treturn (\n\t\t\t\t<Link href={`/admin/crud/${blog.slug}`}>\n\t\t\t\t\t<a className=\"ml-2 btn btn-sm btn-warning\">Update</a>\n\t\t\t\t</Link>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst showAllBlogs = () => {\n\t\treturn blogs.map((blog, i) => {\n\t\t\treturn (\n\t\t\t\t<FlexboxGrid key={i} className=\"manage-blog px-3 py-2 mb-2\">\n\t\t\t\t\t<FlexboxGrid.Item colspan={18}>\n\t\t\t\t\t\t<h4>{blog.title}</h4>\n\t\t\t\t\t\t<p className=\"writer grey-text\">\n\t\t\t\t\t\t\t<Icon icon=\"user\" className=\"pr-2\" /> {blog.postedBy.name}{' '}\n\t\t\t\t\t\t\t<Icon icon=\"calendar\" className=\"px-2\" /> {moment(blog.updatedAt).fromNow()}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t\t<FlexboxGrid.Item colspan={6}>\n\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t<Button size=\"sm\">\n\t\t\t\t\t\t\t\t<Icon icon=\"edit2\" /> Edit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button size=\"sm\" onClick={() => deleteConfirm(blog.slug)}>\n\t\t\t\t\t\t\t\t<Icon icon=\"trash\" /> Delete\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t</FlexboxGrid>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Grid fluid>\n\t\t\t\t\t<Row className=\"show-grid\">{showAllBlogs()}</Row>\n\t\t\t\t</Grid>\n\t\t\t\t{/* <div className=\"col-md-12\">\n                    {message && <div className=\"alert alert-warning\">{message}</div>}\n                    {showAllBlogs()}\n                </div> */}\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default BlogRead;\n"]},"metadata":{},"sourceType":"module"}
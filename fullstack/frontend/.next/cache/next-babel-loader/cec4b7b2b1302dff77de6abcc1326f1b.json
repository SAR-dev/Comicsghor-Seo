{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\crud\\\\BlogCreate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect, useRef } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { imageupload } from '../../actions/imgur';\nimport { getTags } from '../../actions/tag';\nimport { createBlog } from '../../actions/blog';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\nimport '../../node_modules/react-quill/dist/quill.snow.css';\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, TagPicker, FlexboxGrid, SelectPicker } from 'rsuite';\n\nconst CreateBlog = ({\n  router\n}) => {\n  const blogFromLS = () => {\n    if (true) {\n      return false;\n    }\n\n    if (localStorage.getItem('blog')) {\n      return JSON.parse(localStorage.getItem('blog'));\n    } else {\n      return false;\n    }\n  };\n\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  const {\n    0: body,\n    1: setBody\n  } = useState(blogFromLS());\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    error: '',\n    sizeError: '',\n    success: '',\n    formData: '',\n    title: '',\n    images: [],\n    uploading: false\n  });\n  const {\n    error,\n    sizeError,\n    success,\n    formData,\n    title,\n    images,\n    uploading\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    setValues(_objectSpread({}, values, {\n      formData: new FormData()\n    }));\n    initCategories();\n    initTags();\n  }, [router]);\n\n  const initCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        const items = [];\n        data.forEach((item, i) => {\n          items[i] = {\n            key: i,\n            value: item._id,\n            label: item.name\n          };\n        });\n        setCategories(items);\n      }\n    });\n  };\n\n  const initTags = () => {\n    getTags().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        const items = [];\n        data.forEach((item, i) => {\n          items[i] = {\n            key: i,\n            value: item._id,\n            label: item.name\n          };\n        });\n        setTags(items);\n      }\n    });\n  };\n\n  const publishBlog = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      uploading: true\n    }));\n    createBlog(formData, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          uploading: false,\n          title: '',\n          error: '',\n          success: `A new blog titled \"${data.title}\" is created`\n        }));\n        setBody('');\n        setCategories([]);\n        setTags([]);\n        setThumbnail('');\n      }\n    });\n  };\n\n  const {\n    0: thumbnail,\n    1: setThumbnail\n  } = useState([]);\n\n  const handleChange = name => e => {\n    const value = name === 'photo' ? e.target.files[0] : e; // if (name === 'photo') {\n    // \tlet reader = new FileReader();\n    // \treader.onloadend = () => {\n    // \t\tsetThumbnail(reader.result);\n    // \t};\n    // \treader.readAsDataURL(event.target.files[0]);\n    // }\n\n    formData.set(name, value);\n    setValues(_objectSpread({}, values, {\n      [name]: value,\n      formData,\n      error: ''\n    }));\n  };\n\n  const handleImageArray = event => {\n    setValues(_objectSpread({}, values, {\n      uploading: true\n    }));\n    var fileInput = false;\n\n    if (!event.target.files[0] || event.target.files[0].size > 19922944) {\n      setValues(_objectSpread({}, values, {\n        error: 'Image size is too large!',\n        uploading: false\n      }));\n    }\n\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      var img = event.target.files[0];\n      imageupload(img).then(res => {\n        let imgArray = images;\n        imgArray.push(res.data.id);\n        setValues(_objectSpread({}, values, {\n          images: imgArray,\n          uploading: false\n        }));\n        formData.set('image', imgArray);\n      });\n    }\n  };\n\n  const deleteImage = (e, i) => {\n    e.preventDefault();\n    let imgArray = images;\n    imgArray.splice(i, 1);\n    setValues(_objectSpread({}, values, {\n      images: imgArray\n    }));\n    formData.set('image', imgArray);\n  };\n\n  const handleBody = e => {\n    setBody(e);\n    formData.set('body', e);\n\n    if (false) {\n      localStorage.setItem('blog', JSON.stringify(e));\n    }\n  };\n\n  const {\n    0: tempTags\n  } = useRef();\n\n  const handleTagsChange = (e, {\n    value\n  }) => {\n    formData.set('tags', value);\n  };\n\n  const {\n    0: tempCategories\n  } = useRef();\n\n  const handleCategoriesChange = (e, {\n    value\n  }) => {\n    formData.set('categories', value);\n  };\n\n  return __jsx(Form, {\n    fluid: true,\n    onSubmit: publishBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Post Title\")), __jsx(FormControl, {\n    placeholder: \"Give an awesome title...\",\n    value: title,\n    onChange: handleChange('title'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Required\")), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Post Body\")), __jsx(ReactQuill, {\n    modules: QuillModules,\n    formats: QuillFormats,\n    value: body,\n    placeholder: \"Write something amazing...\",\n    onChange: handleBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(FlexboxGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(FlexboxGrid.Item, {\n    colspan: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(TagPicker, {\n    block: true,\n    data: tags,\n    value: tempTags,\n    onChange: handleTagsChange,\n    placeholder: \"Select Tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), __jsx(FlexboxGrid.Item, {\n    colspan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), __jsx(FlexboxGrid.Item, {\n    colspan: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(SelectPicker, {\n    block: true,\n    data: categories,\n    value: tempCategories,\n    onChange: handleCategoriesChange,\n    placeholder: \"Select a Category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }))))) // <Container>\n  // \t<Grid>\n  // \t\t<Grid.Column columns={16}>\n  // \t\t\t<Form onSubmit={publishBlog} loading={uploading ? true : false}>\n  // \t\t\t\t<Grid>\n  // \t\t\t\t\t<Grid.Column width={12}>\n  // \t\t\t\t\t\t<Form.Field>\n  // \t\t\t\t\t\t\t<Input\n  // \t\t\t\t\t\t\t\ttype=\"text\"\n  // \t\t\t\t\t\t\t\tplaceholder=\"Write an awesome title...\"\n  // \t\t\t\t\t\t\t\tvalue={title}\n  // \t\t\t\t\t\t\t\tonChange={handleChange('title')}\n  // \t\t\t\t\t\t\t/>\n  // \t\t\t\t\t\t</Form.Field>\n  // \t\t\t\t\t\t<Form.Field>\n  // \t\t\t\t\t\t\t<ReactQuill\n  // \t\t\t\t\t\t\t\tmodules={QuillModules}\n  // \t\t\t\t\t\t\t\tformats={QuillFormats}\n  // \t\t\t\t\t\t\t\tvalue={body}\n  // \t\t\t\t\t\t\t\tplaceholder=\"Write something amazing...\"\n  // \t\t\t\t\t\t\t\tonChange={handleBody}\n  // \t\t\t\t\t\t\t/>\n  // \t\t\t\t\t\t</Form.Field>\n  // \t\t\t\t\t\t<Grid columns=\"equal\" style={{ paddingBottom: 25 }}>\n  // \t\t\t\t\t\t\t<Grid.Column columns={8}>\n  // \t\t\t\t\t\t\t\t<Dropdown\n  // \t\t\t\t\t\t\t\t\tplaceholder=\"Tags\"\n  // \t\t\t\t\t\t\t\t\tfluid\n  // \t\t\t\t\t\t\t\t\tmultiple\n  // \t\t\t\t\t\t\t\t\tsearch\n  // \t\t\t\t\t\t\t\t\tselection\n  // \t\t\t\t\t\t\t\t\toptions={tags}\n  // \t\t\t\t\t\t\t\t\tvalue={tempTags}\n  // \t\t\t\t\t\t\t\t\tonChange={handleTagsChange}\n  // \t\t\t\t\t\t\t\t/>\n  // \t\t\t\t\t\t\t</Grid.Column>\n  // \t\t\t\t\t\t\t<Grid.Column columns={8}>\n  // \t\t\t\t\t\t\t\t<Dropdown\n  // \t\t\t\t\t\t\t\t\tplaceholder=\"Categories\"\n  // \t\t\t\t\t\t\t\t\tfluid\n  // \t\t\t\t\t\t\t\t\tsearch\n  // \t\t\t\t\t\t\t\t\tselection\n  // \t\t\t\t\t\t\t\t\toptions={categories}\n  // \t\t\t\t\t\t\t\t\tvalue={tempCategories}\n  // \t\t\t\t\t\t\t\t\tonChange={handleCategoriesChange}\n  // \t\t\t\t\t\t\t\t/>\n  // \t\t\t\t\t\t\t</Grid.Column>\n  // \t\t\t\t\t\t</Grid>\n  // \t\t\t\t\t</Grid.Column>\n  // \t\t\t\t\t<Grid.Column width={4}>\n  // \t\t\t\t\t\t<Form.Field>\n  // \t\t\t\t\t\t\t{thumbnail.length > 10 && <img className=\"thumbnailImage\" src={thumbnail} />}\n  // \t\t\t\t\t\t\t<div class=\"choose_file\">\n  // \t\t\t\t\t\t\t\t<Button secondary>\n  // \t\t\t\t\t\t\t\t\t<Icon name=\"image\" /> Upload Thumbnail\n  // \t\t\t\t\t\t\t\t</Button>\n  // \t\t\t\t\t\t\t\t<input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" />\n  // \t\t\t\t\t\t\t</div>\n  // \t\t\t\t\t\t</Form.Field>\n  // \t\t\t\t\t\t<Form.Field>\n  // \t\t\t\t\t\t\t{images.map((image, i) => {\n  // \t\t\t\t\t\t\t\treturn (\n  // \t\t\t\t\t\t\t\t\t<>\n  // \t\t\t\t\t\t\t\t\t<img\n  // \t\t\t\t\t\t\t\t\t\tclassName=\"thumbnailImage\"\n  // \t\t\t\t\t\t\t\t\t\tsrc={`https://i.imgur.com/${image}m.png`}\n  // \t\t\t\t\t\t\t\t\t\tkey={i}\n  // \t\t\t\t\t\t\t\t\t/>\n  // \t\t\t\t\t\t\t\t\t<Button circular className=\"deleteButton\" negative icon=\"minus\" onClick={(e) => deleteImage(e,i)}/>\n  // \t\t\t\t\t\t\t\t\t</>\n  // \t\t\t\t\t\t\t\t);\n  // \t\t\t\t\t\t\t})}\n  // \t\t\t\t\t\t\t<div class=\"choose_file\">\n  // \t\t\t\t\t\t\t\t<Button secondary loading={uploading ? true : false}>\n  // \t\t\t\t\t\t\t\t\t<Icon name=\"image\" /> Upload Images\n  // \t\t\t\t\t\t\t\t</Button>\n  // \t\t\t\t\t\t\t\t<input onChange={handleImageArray} type=\"file\" accept=\"image/*\" />\n  // \t\t\t\t\t\t\t</div>\n  // \t\t\t\t\t\t</Form.Field>\n  // \t\t\t\t\t</Grid.Column>\n  // \t\t\t\t</Grid>\n  // \t\t\t\t<Button type=\"submit\" primary style={{ width: '100%' }}>\n  // \t\t\t\t\tPublish\n  // \t\t\t\t</Button>\n  // \t\t\t</Form>\n  // \t\t</Grid.Column>\n  // \t</Grid>\n  // \t<Modal open={error} onClose={() => setValues({ ...values, error: '' })} basic size=\"tiny\">\n  // \t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\n  // \t\t<Modal.Content>{error}</Modal.Content>\n  // \t\t<Modal.Actions>\n  // \t\t\t<Button color=\"green\" onClick={() => setValues({ ...values, error: '' })} inverted>\n  // \t\t\t\t<Icon name=\"checkmark\" /> Got it\n  // \t\t\t</Button>\n  // \t\t</Modal.Actions>\n  // \t</Modal>\n  // \t<Modal open={success} onClose={() => setValues({ ...values, success: '' })} basic size=\"tiny\">\n  // \t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\n  // \t\t<Modal.Content>{success}</Modal.Content>\n  // \t\t<Modal.Actions>\n  // \t\t\t<Button color=\"green\" onClick={() => setValues({ ...values, success: '' })} inverted>\n  // \t\t\t\t<Icon name=\"checkmark\" /> Got it\n  // \t\t\t</Button>\n  // \t\t</Modal.Actions>\n  // \t</Modal>\n  // </Container>\n  ;\n};\n\nexport default withRouter(CreateBlog);","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/crud/BlogCreate.js"],"names":["Link","useState","useEffect","useRef","Router","dynamic","withRouter","getCookie","isAuth","getCategories","imageupload","getTags","createBlog","ReactQuill","ssr","QuillModules","QuillFormats","Form","FormGroup","FormControl","ControlLabel","HelpBlock","TagPicker","FlexboxGrid","SelectPicker","CreateBlog","router","blogFromLS","localStorage","getItem","JSON","parse","categories","setCategories","tags","setTags","body","setBody","values","setValues","error","sizeError","success","formData","title","images","uploading","token","FormData","initCategories","initTags","then","data","items","forEach","item","i","key","value","_id","label","name","publishBlog","e","preventDefault","setThumbnail","thumbnail","handleChange","target","files","set","handleImageArray","event","fileInput","size","img","res","imgArray","push","id","deleteImage","splice","handleBody","setItem","stringify","tempTags","handleTagsChange","tempCategories","handleCategoriesChange"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect, useRef } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { imageupload } from '../../actions/imgur';\nimport { getTags } from '../../actions/tag';\nimport { createBlog } from '../../actions/blog';\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\nimport '../../node_modules/react-quill/dist/quill.snow.css';\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\n\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, TagPicker, FlexboxGrid, SelectPicker } from 'rsuite';\n\nconst CreateBlog = ({ router }) => {\n\tconst blogFromLS = () => {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (localStorage.getItem('blog')) {\n\t\t\treturn JSON.parse(localStorage.getItem('blog'));\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst [ categories, setCategories ] = useState([]);\n\tconst [ tags, setTags ] = useState([]);\n\n\tconst [ body, setBody ] = useState(blogFromLS());\n\tconst [ values, setValues ] = useState({\n\t\terror: '',\n\t\tsizeError: '',\n\t\tsuccess: '',\n\t\tformData: '',\n\t\ttitle: '',\n\t\timages: [],\n\t\tuploading: false\n\t});\n\n\tconst { error, sizeError, success, formData, title, images, uploading } = values;\n\tconst token = getCookie('token');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetValues({ ...values, formData: new FormData() });\n\t\t\tinitCategories();\n\t\t\tinitTags();\n\t\t},\n\t\t[ router ]\n\t);\n\n\tconst initCategories = () => {\n\t\tgetCategories().then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t} else {\n\t\t\t\tconst items = [];\n\t\t\t\tdata.forEach((item, i) => {\n\t\t\t\t\titems[i] = {\n\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\tlabel: item.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetCategories(items);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst initTags = () => {\n\t\tgetTags().then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t} else {\n\t\t\t\tconst items = [];\n\t\t\t\tdata.forEach((item, i) => {\n\t\t\t\t\titems[i] = {\n\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\tvalue: item._id,\n\t\t\t\t\t\tlabel: item.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetTags(items);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst publishBlog = (e) => {\n\t\te.preventDefault();\n\t\tsetValues({ ...values, uploading: true });\n\t\tcreateBlog(formData, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t} else {\n\t\t\t\tsetValues({\n\t\t\t\t\t...values,\n\t\t\t\t\tuploading: false,\n\t\t\t\t\ttitle: '',\n\t\t\t\t\terror: '',\n\t\t\t\t\tsuccess: `A new blog titled \"${data.title}\" is created`\n\t\t\t\t});\n\t\t\t\tsetBody('');\n\t\t\t\tsetCategories([]);\n\t\t\t\tsetTags([]);\n\t\t\t\tsetThumbnail('');\n\t\t\t}\n\t\t});\n\t};\n\n\tconst [ thumbnail, setThumbnail ] = useState([]);\n\n\tconst handleChange = (name) => (e) => {\n\t\tconst value = name === 'photo' ? e.target.files[0] : e;\n\t\t// if (name === 'photo') {\n\t\t// \tlet reader = new FileReader();\n\t\t// \treader.onloadend = () => {\n\t\t// \t\tsetThumbnail(reader.result);\n\t\t// \t};\n\t\t// \treader.readAsDataURL(event.target.files[0]);\n\t\t// }\n\t\tformData.set(name, value);\n\t\tsetValues({ ...values, [name]: value, formData, error: '' });\n\t};\n\n\tconst handleImageArray = (event) => {\n\t\tsetValues({ ...values, uploading: true });\n\t\tvar fileInput = false;\n\t\tif (!event.target.files[0] || event.target.files[0].size > 19922944) {\n\t\t\tsetValues({ ...values, error: 'Image size is too large!', uploading: false });\n\t\t}\n\t\tif (event.target.files[0]) {\n\t\t\tfileInput = true;\n\t\t}\n\t\tif (fileInput) {\n\t\t\tvar img = event.target.files[0];\n\t\t\timageupload(img).then((res) => {\n\t\t\t\tlet imgArray = images;\n\t\t\t\timgArray.push(res.data.id);\n\t\t\t\tsetValues({ ...values, images: imgArray, uploading: false });\n\t\t\t\tformData.set('image', imgArray);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst deleteImage = (e, i) => {\n\t\te.preventDefault();\n\t\tlet imgArray = images;\n\t\timgArray.splice(i, 1);\n\t\tsetValues({ ...values, images: imgArray });\n\t\tformData.set('image', imgArray);\n\t};\n\n\tconst handleBody = (e) => {\n\t\tsetBody(e);\n\t\tformData.set('body', e);\n\t\tif (typeof window !== 'undefined') {\n\t\t\tlocalStorage.setItem('blog', JSON.stringify(e));\n\t\t}\n\t};\n\n\tconst [ tempTags ] = useRef();\n\n\tconst handleTagsChange = (e, { value }) => {\n\t\tformData.set('tags', value);\n\t};\n\n\tconst [ tempCategories ] = useRef();\n\n\tconst handleCategoriesChange = (e, { value }) => {\n\t\tformData.set('categories', value);\n\t};\n\n\treturn (\n\t\t<Form fluid onSubmit={publishBlog}>\n\t\t\t<FormGroup>\n\t\t\t\t<ControlLabel>\n\t\t\t\t\t<h6>Post Title</h6>\n\t\t\t\t</ControlLabel>\n\t\t\t\t<FormControl placeholder=\"Give an awesome title...\" value={title} onChange={handleChange('title')} />\n\t\t\t\t<HelpBlock>Required</HelpBlock>\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<ControlLabel>\n\t\t\t\t\t<h6>Post Body</h6>\n\t\t\t\t</ControlLabel>\n\t\t\t\t<ReactQuill\n\t\t\t\t\tmodules={QuillModules}\n\t\t\t\t\tformats={QuillFormats}\n\t\t\t\t\tvalue={body}\n\t\t\t\t\tplaceholder=\"Write something amazing...\"\n\t\t\t\t\tonChange={handleBody}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<FlexboxGrid>\n\t\t\t\t\t<FlexboxGrid.Item colspan={11}>\n\t\t\t\t\t\t<TagPicker block data={tags} value={tempTags} onChange={handleTagsChange} placeholder=\"Select Tags\" />\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t\t<FlexboxGrid.Item colspan={2} />\n\t\t\t\t\t<FlexboxGrid.Item colspan={11}>\n\t\t\t\t\t\t<SelectPicker block data={categories} value={tempCategories} onChange={handleCategoriesChange} placeholder=\"Select a Category\" />\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t</FlexboxGrid>\n\t\t\t</FormGroup>\n\t\t</Form>\n\t\t// <Container>\n\t\t// \t<Grid>\n\t\t// \t\t<Grid.Column columns={16}>\n\t\t// \t\t\t<Form onSubmit={publishBlog} loading={uploading ? true : false}>\n\t\t// \t\t\t\t<Grid>\n\t\t// \t\t\t\t\t<Grid.Column width={12}>\n\t\t// \t\t\t\t\t\t<Form.Field>\n\t\t// \t\t\t\t\t\t\t<Input\n\t\t// \t\t\t\t\t\t\t\ttype=\"text\"\n\t\t// \t\t\t\t\t\t\t\tplaceholder=\"Write an awesome title...\"\n\t\t// \t\t\t\t\t\t\t\tvalue={title}\n\t\t// \t\t\t\t\t\t\t\tonChange={handleChange('title')}\n\t\t// \t\t\t\t\t\t\t/>\n\t\t// \t\t\t\t\t\t</Form.Field>\n\t\t// \t\t\t\t\t\t<Form.Field>\n\t\t// \t\t\t\t\t\t\t<ReactQuill\n\t\t// \t\t\t\t\t\t\t\tmodules={QuillModules}\n\t\t// \t\t\t\t\t\t\t\tformats={QuillFormats}\n\t\t// \t\t\t\t\t\t\t\tvalue={body}\n\t\t// \t\t\t\t\t\t\t\tplaceholder=\"Write something amazing...\"\n\t\t// \t\t\t\t\t\t\t\tonChange={handleBody}\n\t\t// \t\t\t\t\t\t\t/>\n\t\t// \t\t\t\t\t\t</Form.Field>\n\t\t// \t\t\t\t\t\t<Grid columns=\"equal\" style={{ paddingBottom: 25 }}>\n\t\t// \t\t\t\t\t\t\t<Grid.Column columns={8}>\n\t\t// \t\t\t\t\t\t\t\t<Dropdown\n\t\t// \t\t\t\t\t\t\t\t\tplaceholder=\"Tags\"\n\t\t// \t\t\t\t\t\t\t\t\tfluid\n\t\t// \t\t\t\t\t\t\t\t\tmultiple\n\t\t// \t\t\t\t\t\t\t\t\tsearch\n\t\t// \t\t\t\t\t\t\t\t\tselection\n\t\t// \t\t\t\t\t\t\t\t\toptions={tags}\n\t\t// \t\t\t\t\t\t\t\t\tvalue={tempTags}\n\t\t// \t\t\t\t\t\t\t\t\tonChange={handleTagsChange}\n\t\t// \t\t\t\t\t\t\t\t/>\n\t\t// \t\t\t\t\t\t\t</Grid.Column>\n\t\t// \t\t\t\t\t\t\t<Grid.Column columns={8}>\n\t\t// \t\t\t\t\t\t\t\t<Dropdown\n\t\t// \t\t\t\t\t\t\t\t\tplaceholder=\"Categories\"\n\t\t// \t\t\t\t\t\t\t\t\tfluid\n\t\t// \t\t\t\t\t\t\t\t\tsearch\n\t\t// \t\t\t\t\t\t\t\t\tselection\n\t\t// \t\t\t\t\t\t\t\t\toptions={categories}\n\t\t// \t\t\t\t\t\t\t\t\tvalue={tempCategories}\n\t\t// \t\t\t\t\t\t\t\t\tonChange={handleCategoriesChange}\n\t\t// \t\t\t\t\t\t\t\t/>\n\t\t// \t\t\t\t\t\t\t</Grid.Column>\n\t\t// \t\t\t\t\t\t</Grid>\n\t\t// \t\t\t\t\t</Grid.Column>\n\t\t// \t\t\t\t\t<Grid.Column width={4}>\n\t\t// \t\t\t\t\t\t<Form.Field>\n\t\t// \t\t\t\t\t\t\t{thumbnail.length > 10 && <img className=\"thumbnailImage\" src={thumbnail} />}\n\t\t// \t\t\t\t\t\t\t<div class=\"choose_file\">\n\t\t// \t\t\t\t\t\t\t\t<Button secondary>\n\t\t// \t\t\t\t\t\t\t\t\t<Icon name=\"image\" /> Upload Thumbnail\n\t\t// \t\t\t\t\t\t\t\t</Button>\n\t\t// \t\t\t\t\t\t\t\t<input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" />\n\t\t// \t\t\t\t\t\t\t</div>\n\t\t// \t\t\t\t\t\t</Form.Field>\n\t\t// \t\t\t\t\t\t<Form.Field>\n\t\t// \t\t\t\t\t\t\t{images.map((image, i) => {\n\t\t// \t\t\t\t\t\t\t\treturn (\n\t\t// \t\t\t\t\t\t\t\t\t<>\n\t\t// \t\t\t\t\t\t\t\t\t<img\n\t\t// \t\t\t\t\t\t\t\t\t\tclassName=\"thumbnailImage\"\n\t\t// \t\t\t\t\t\t\t\t\t\tsrc={`https://i.imgur.com/${image}m.png`}\n\t\t// \t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t// \t\t\t\t\t\t\t\t\t/>\n\t\t// \t\t\t\t\t\t\t\t\t<Button circular className=\"deleteButton\" negative icon=\"minus\" onClick={(e) => deleteImage(e,i)}/>\n\t\t// \t\t\t\t\t\t\t\t\t</>\n\t\t// \t\t\t\t\t\t\t\t);\n\t\t// \t\t\t\t\t\t\t})}\n\t\t// \t\t\t\t\t\t\t<div class=\"choose_file\">\n\t\t// \t\t\t\t\t\t\t\t<Button secondary loading={uploading ? true : false}>\n\t\t// \t\t\t\t\t\t\t\t\t<Icon name=\"image\" /> Upload Images\n\t\t// \t\t\t\t\t\t\t\t</Button>\n\t\t// \t\t\t\t\t\t\t\t<input onChange={handleImageArray} type=\"file\" accept=\"image/*\" />\n\t\t// \t\t\t\t\t\t\t</div>\n\t\t// \t\t\t\t\t\t</Form.Field>\n\t\t// \t\t\t\t\t</Grid.Column>\n\t\t// \t\t\t\t</Grid>\n\n\t\t// \t\t\t\t<Button type=\"submit\" primary style={{ width: '100%' }}>\n\t\t// \t\t\t\t\tPublish\n\t\t// \t\t\t\t</Button>\n\t\t// \t\t\t</Form>\n\t\t// \t\t</Grid.Column>\n\t\t// \t</Grid>\n\n\t\t// \t<Modal open={error} onClose={() => setValues({ ...values, error: '' })} basic size=\"tiny\">\n\t\t// \t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\n\t\t// \t\t<Modal.Content>{error}</Modal.Content>\n\t\t// \t\t<Modal.Actions>\n\t\t// \t\t\t<Button color=\"green\" onClick={() => setValues({ ...values, error: '' })} inverted>\n\t\t// \t\t\t\t<Icon name=\"checkmark\" /> Got it\n\t\t// \t\t\t</Button>\n\t\t// \t\t</Modal.Actions>\n\t\t// \t</Modal>\n\n\t\t// \t<Modal open={success} onClose={() => setValues({ ...values, success: '' })} basic size=\"tiny\">\n\t\t// \t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\n\t\t// \t\t<Modal.Content>{success}</Modal.Content>\n\t\t// \t\t<Modal.Actions>\n\t\t// \t\t\t<Button color=\"green\" onClick={() => setValues({ ...values, success: '' })} inverted>\n\t\t// \t\t\t\t<Icon name=\"checkmark\" /> Got it\n\t\t// \t\t\t</Button>\n\t\t// \t\t</Modal.Actions>\n\t\t// \t</Modal>\n\t\t// </Container>\n\t);\n};\n\nexport default withRouter(CreateBlog);\n"]},"metadata":{},"sourceType":"module"}
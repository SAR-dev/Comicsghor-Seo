{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\Projects\\\\SOCIAL MEDIA + BLOOD BANK + SHOP\\\\fullstack\\\\frontend\\\\components\\\\auth\\\\SigninComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\nimport { useState } from 'react';\nimport { signin } from '../../actions/auth';\nimport { useRouter } from 'next/router';\n\nvar SigninComponent = function SigninComponent() {\n  var _useState = useState({\n    email: '',\n    password: '',\n    error: false,\n    checking: false,\n    message: '',\n    showForm: true\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var email = values.email,\n      password = values.password,\n      error = values.error,\n      checking = values.checking,\n      message = values.message;\n  var headerStyle = {\n    textAlign: 'center'\n  };\n  var subHeaderStyle = {\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingTop: 15,\n    color: 'grey'\n  };\n  var router = useRouter();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      checking: true,\n      error: false\n    }));\n    var user = {\n      name: name,\n      email: email,\n      password: password\n    };\n    signin(user).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          email: '',\n          password: '',\n          checking: false,\n          error: false,\n          message: data.message\n        }));\n      }\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValues(_objectSpread({}, values, _defineProperty({\n        error: false\n      }, name, e.target.value)));\n    };\n  };\n\n  var handleClose = function handleClose() {\n    setValues(_objectSpread({}, values, {\n      error: ''\n    }));\n  };\n\n  var pushHome = function pushHome() {\n    setValues(_objectSpread({}, values, {\n      message: ''\n    }));\n    router.push('/');\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    width: \"8\",\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: headerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Header, {\n    as: \"h2\",\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \"Comics Ghor\", __jsx(Header.Subheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"A Canvas to Paint Your Mind Out\"), __jsx(Header.Subheader, {\n    style: subHeaderStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Welcome to Comics Ghor, a Bangladeshi website. The purpose of Comics Ghor is to create a free platform for all the Bangladeshi people, of all age, who desire to draw comics or write novels, stories or more.\")))), __jsx(Grid.Column, {\n    width: \"8\",\n    style: {\n      padding: '35px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Message, {\n    attached: true,\n    header: \"Welcome to Comics Ghor!\",\n    content: \"Fill out the form below to sign-up for a new account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(Form, {\n    className: \"attached fluid segment\",\n    onSubmit: handleSubmit,\n    loading: checking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Form.Input, {\n    value: email,\n    onChange: handleChange('email'),\n    label: \"Email\",\n    placeholder: \"Email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(Form.Input, {\n    value: password,\n    onChange: handleChange('password'),\n    label: \"Password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Icon, {\n    color: \"blue\",\n    name: \"hand point right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), \"Do not share your sign-in credentials with others.\"), __jsx(Button, {\n    color: \"blue\",\n    type: \"submit\",\n    loading: checking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Sign In\")), __jsx(Message, {\n    attached: \"bottom\",\n    warning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"help\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), \"Don't have an account?\\xA0\", __jsx(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Sign-up here\"), \"\\xA0instead.\"))))), __jsx(Modal, {\n    open: error,\n    onClose: handleClose,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Sign-in Error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, error), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: handleClose,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \" Got it\"))), __jsx(Modal, {\n    open: message,\n    onClose: pushHome,\n    basic: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: \"browser\",\n    content: \"Sign-in Successful\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), __jsx(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, message), __jsx(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"green\",\n    onClick: pushHome,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), \" Got it\"))));\n};\n\nexport default SigninComponent;","map":{"version":3,"sources":["E:/Projects/SOCIAL MEDIA + BLOOD BANK + SHOP/fullstack/frontend/components/auth/SigninComponent.js"],"names":["Button","Form","Icon","Message","Grid","Header","Modal","useState","signin","useRouter","SigninComponent","email","password","error","checking","message","showForm","values","setValues","headerStyle","textAlign","subHeaderStyle","paddingLeft","paddingRight","paddingTop","color","router","handleSubmit","e","preventDefault","user","name","then","data","handleChange","target","value","handleClose","pushHome","push","padding"],"mappings":"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","sourcesContent":["import { Button, Form, Icon, Message, Grid, Header, Modal } from 'semantic-ui-react';\r\nimport { useState } from 'react';\r\nimport { signin } from '../../actions/auth';\r\nimport { useRouter } from 'next/router'\r\n\r\nconst SigninComponent = () => {\r\n\tconst [values, setValues] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\terror: false,\r\n\t\tchecking: false,\r\n\t\tmessage: '',\r\n\t\tshowForm: true,\r\n\t});\r\n\r\n\tconst { email, password, error, checking, message } = values;\r\n\r\n\tconst headerStyle = {\r\n\t\ttextAlign: 'center'\r\n\t};\r\n\tconst subHeaderStyle = {\r\n\t\tpaddingLeft: 30,\r\n\t\tpaddingRight: 30,\r\n\t\tpaddingTop: 15,\r\n\t\tcolor: 'grey'\r\n\t};\r\n\r\n\tconst router = useRouter();\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetValues({ ...values, checking: true, error: false });\r\n\t\tconst user = { name, email, password };\r\n\r\n\t\tsignin(user).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\temail: '',\r\n\t\t\t\t\tpassword: '',\r\n\t\t\t\t\tchecking: false,\r\n\t\t\t\t\terror: false,\r\n\t\t\t\t\tmessage: data.message,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (name) => (e) => {\r\n\t\tsetValues({ ...values, error: false, [name]: e.target.value });\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetValues({ ...values, error: '' });\r\n\t};\r\n\r\n\tconst pushHome = () => {\r\n\t\tsetValues({ ...values, message: '' });\r\n\t\trouter.push('/')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column width=\"8\" verticalAlign=\"middle\">\r\n\t\t\t\t\t\t<div style={headerStyle}>\r\n\t\t\t\t\t\t\t<Header as=\"h2\" icon>\r\n\t\t\t\t\t\t\t\t<Icon name=\"home\" />\r\n\t\t\t\t\t\t\t\tComics Ghor\r\n\t\t\t\t\t\t\t\t<Header.Subheader>A Canvas to Paint Your Mind Out</Header.Subheader>\r\n\t\t\t\t\t\t\t\t<Header.Subheader style={subHeaderStyle}>\r\n\t\t\t\t\t\t\t\t\tWelcome to Comics Ghor, a Bangladeshi website. The purpose of Comics Ghor is to\r\n\t\t\t\t\t\t\t\t\tcreate a free platform for all the Bangladeshi people, of all age, who desire to\r\n\t\t\t\t\t\t\t\t\tdraw comics or write novels, stories or more.\r\n\t\t\t\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width=\"8\" style={{ padding: '35px' }}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\tattached\r\n\t\t\t\t\t\t\t\theader=\"Welcome to Comics Ghor!\"\r\n\t\t\t\t\t\t\t\tcontent=\"Fill out the form below to sign-up for a new account\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form className=\"attached fluid segment\" onSubmit={handleSubmit} loading={checking}>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange('email')}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange('password')}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Message>\r\n                                    <Icon color=\"blue\" name=\"hand point right\" />\r\n                                    Do not share your sign-in credentials with others.\r\n                                    </Message>\r\n\t\t\t\t\t\t\t\t<Button color=\"blue\" type=\"submit\" loading={checking}>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t<Message attached=\"bottom\" warning>\r\n\t\t\t\t\t\t\t\t<Icon name=\"help\" />\r\n\t\t\t\t\t\t\t\tDon't have an account?&nbsp;<a href=\"#\">Sign-up here</a>&nbsp;instead.\r\n\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t\t<Modal open={error} onClose={handleClose} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Error\" />\r\n\t\t\t\t<Modal.Content>{error}</Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={handleClose} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal open={message} onClose={pushHome} basic size=\"tiny\">\r\n\t\t\t\t<Header icon=\"browser\" content=\"Sign-in Successful\" />\r\n\t\t\t\t<Modal.Content>{message}</Modal.Content>\r\n\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t<Button color=\"green\" onClick={pushHome} inverted>\r\n\t\t\t\t\t\t<Icon name=\"checkmark\" /> Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Actions>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default SigninComponent;\r\n"]},"metadata":{},"sourceType":"module"}
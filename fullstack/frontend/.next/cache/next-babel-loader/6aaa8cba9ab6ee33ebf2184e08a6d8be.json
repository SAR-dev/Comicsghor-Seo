{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\form\\\\ContactForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { emailContactForm } from '../../actions/form';\nimport { isAuth } from '../../actions/auth';\nimport { Form, FormGroup, FormControl, ControlLabel, Button, Icon } from 'rsuite';\n\nconst ContactForm = ({\n  authorEmail\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    message: '',\n    name: '',\n    email: '',\n    sent: false,\n    buttonText: 'Send Message',\n    success: false,\n    error: false\n  });\n  const {\n    message,\n    name,\n    email,\n    sent,\n    buttonText,\n    success,\n    error\n  } = values;\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    let send_name = isAuth().name;\n    let send_email = isAuth().email;\n    setValues(_objectSpread({}, values, {\n      name: send_name,\n      email: send_email,\n      buttonText: 'Sending...'\n    }));\n    console.log(send_name, send_email);\n    emailContactForm({\n      authorEmail,\n      name,\n      email,\n      message\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          sent: true,\n          name: '',\n          email: '',\n          message: '',\n          buttonText: 'Sent',\n          success: data.success\n        }));\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread({}, values, {\n      [name]: e,\n      error: false,\n      success: false,\n      buttonText: 'Send Message'\n    }));\n  };\n\n  const showSuccessMessage = () => success && __jsx(\"div\", {\n    className: \"alert alert-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Thank you for contacting us.\");\n\n  const showErrorMessage = () => __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, error);\n\n  const contactForm = () => {\n    return __jsx(Form, {\n      fluid: true,\n      onSubmit: clickSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Message\"), __jsx(FormControl, {\n      rows: 10,\n      name: \"textarea\",\n      componentClass: \"textarea\",\n      value: message,\n      onChange: handleChange('message'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), __jsx(Button, {\n      color: \"blue\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(Icon, {\n      icon: \"send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \" Send\"));\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, showSuccessMessage(), showErrorMessage(), contactForm());\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/form/ContactForm.js"],"names":["useState","Link","emailContactForm","isAuth","Form","FormGroup","FormControl","ControlLabel","Button","Icon","ContactForm","authorEmail","values","setValues","message","name","email","sent","buttonText","success","error","clickSubmit","e","preventDefault","send_name","send_email","console","log","then","data","handleChange","showSuccessMessage","showErrorMessage","display","contactForm"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,YAAvC,EAAqDC,MAArD,EAA6DC,IAA7D,QAAyE,QAAzE;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACrC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC;AACjCc,IAAAA,OAAO,EAAE,EADwB;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,IAAI,EAAE,KAJ2B;AAKjCC,IAAAA,UAAU,EAAE,cALqB;AAMjCC,IAAAA,OAAO,EAAE,KANwB;AAOjCC,IAAAA,KAAK,EAAE;AAP0B,GAAD,CAApC;AAUA,QAAM;AAAEN,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,UAA9B;AAA0CC,IAAAA,OAA1C;AAAmDC,IAAAA;AAAnD,MAA6DR,MAAnE;;AAEA,QAAMS,WAAW,GAAGC,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,SAAS,GAAGrB,MAAM,GAAGY,IAAzB;AACA,QAAIU,UAAU,GAAGtB,MAAM,GAAGa,KAA1B;AAEAH,IAAAA,SAAS,mBAAMD,MAAN;AAAcG,MAAAA,IAAI,EAAES,SAApB;AAA+BR,MAAAA,KAAK,EAAES,UAAtC;AAAkDP,MAAAA,UAAU,EAAE;AAA9D,OAAT;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBC,UAAvB;AAEAvB,IAAAA,gBAAgB,CAAC;AAAES,MAAAA,WAAF;AAAeI,MAAAA,IAAf;AAAqBC,MAAAA,KAArB;AAA4BF,MAAAA;AAA5B,KAAD,CAAhB,CAAwDc,IAAxD,CAA6DC,IAAI,IAAI;AACjE,UAAIA,IAAI,CAACT,KAAT,EAAgB;AACZP,QAAAA,SAAS,mBAAMD,MAAN;AAAcQ,UAAAA,KAAK,EAAES,IAAI,CAACT;AAA1B,WAAT;AACH,OAFD,MAEO;AACHP,QAAAA,SAAS,mBACFD,MADE;AAELK,UAAAA,IAAI,EAAE,IAFD;AAGLF,UAAAA,IAAI,EAAE,EAHD;AAILC,UAAAA,KAAK,EAAE,EAJF;AAKLF,UAAAA,OAAO,EAAE,EALJ;AAMLI,UAAAA,UAAU,EAAE,MANP;AAOLC,UAAAA,OAAO,EAAEU,IAAI,CAACV;AAPT,WAAT;AASH;AACJ,KAdD;AAeH,GAvBD;;AAyBA,QAAMW,YAAY,GAAGf,IAAI,IAAIO,CAAC,IAAI;AAC9BT,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACG,IAAD,GAAQO,CAAtB;AAAyBF,MAAAA,KAAK,EAAE,KAAhC;AAAuCD,MAAAA,OAAO,EAAE,KAAhD;AAAuDD,MAAAA,UAAU,EAAE;AAAnE,OAAT;AACH,GAFD;;AAIA,QAAMa,kBAAkB,GAAG,MAAMZ,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA5C;;AAEA,QAAMa,gBAAgB,GAAG,MACrB;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEb,KAAK,GAAG,EAAH,GAAQ;AAAxB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,CADJ;;AAMA,QAAMc,WAAW,GAAG,MAAM;AACtB,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,QAAQ,EAAEb,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,cAAc,EAAC,UAAtD;AAAiE,MAAA,KAAK,EAAEP,OAAxE;AAAiF,MAAA,QAAQ,EAAEgB,YAAY,CAAC,SAAD,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,UALJ,CADJ;AASH,GAVD;;AAYA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,kBAAkB,EADvB,EAEKC,gBAAgB,EAFrB,EAGKE,WAAW,EAHhB,CADJ;AAOH,CArED;;AAuEA,eAAexB,WAAf","sourcesContent":["import { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { emailContactForm } from '../../actions/form';\r\nimport { isAuth } from '../../actions/auth';\r\nimport { Form, FormGroup, FormControl, ControlLabel, Button, Icon } from 'rsuite';\r\n\r\nconst ContactForm = ({ authorEmail }) => {\r\n    const [values, setValues] = useState({\r\n        message: '',\r\n        name: '',\r\n        email: '',\r\n        sent: false,\r\n        buttonText: 'Send Message',\r\n        success: false,\r\n        error: false\r\n    });\r\n\r\n    const { message, name, email, sent, buttonText, success, error } = values;\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        let send_name = isAuth().name\r\n        let send_email = isAuth().email\r\n        \r\n        setValues({ ...values, name: send_name, email: send_email, buttonText: 'Sending...' });\r\n        console.log(send_name, send_email)\r\n        \r\n        emailContactForm({ authorEmail, name, email, message }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    sent: true,\r\n                    name: '',\r\n                    email: '',\r\n                    message: '',\r\n                    buttonText: 'Sent',\r\n                    success: data.success\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, [name]: e, error: false, success: false, buttonText: 'Send Message' });\r\n    };\r\n\r\n    const showSuccessMessage = () => success && <div className=\"alert alert-info\">Thank you for contacting us.</div>;\r\n\r\n    const showErrorMessage = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const contactForm = () => {\r\n        return (\r\n            <Form fluid onSubmit={clickSubmit}>\r\n                <FormGroup>\r\n                    <ControlLabel>Message</ControlLabel>\r\n                    <FormControl rows={10} name=\"textarea\" componentClass=\"textarea\" value={message} onChange={handleChange('message')} />\r\n                </FormGroup>\r\n                <Button color=\"blue\" type=\"submit\"><Icon icon=\"send\"  /> Send</Button>\r\n            </Form>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {showSuccessMessage()}\r\n            {showErrorMessage()}\r\n            {contactForm()}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}
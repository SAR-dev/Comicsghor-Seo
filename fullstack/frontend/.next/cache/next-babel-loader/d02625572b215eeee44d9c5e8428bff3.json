{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\auth\\\\ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\nimport { API } from '../../config';\nimport { imageupload } from '../../actions/imgur';\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, Grid, Row, Col, SelectPicker, Button, FlexboxGrid } from 'rsuite';\n\nvar ProfileUpdate = function ProfileUpdate() {\n  var _useState = useState({\n    username: '',\n    name: '',\n    email: '',\n    avatar: '',\n    cover: '',\n    about: '',\n    blood: '',\n    contact: '',\n    address: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var token = getCookie('token');\n  var username = values.username,\n      name = values.name,\n      email = values.email,\n      avatar = values.avatar,\n      cover = values.cover,\n      about = values.about,\n      blood = values.blood,\n      contact = values.contact,\n      address = values.address,\n      password = values.password,\n      error = values.error,\n      success = values.success,\n      loading = values.loading,\n      photo = values.photo,\n      userData = values.userData;\n\n  var init = function init() {\n    getProfile(token).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          avatar: data.avatar,\n          cover: data.cover,\n          about: data.about,\n          blood: data.blood,\n          contact: data.contact,\n          address: data.address,\n          userData: new FormData()\n        }));\n      }\n    });\n  };\n\n  useEffect(function () {\n    init();\n  }, []);\n\n  var _useState2 = useState([{\n    label: 'A+',\n    value: 'A+'\n  }, {\n    label: 'A-',\n    value: 'A-'\n  }, {\n    label: 'B+',\n    value: 'B+'\n  }, {\n    label: 'B-',\n    value: 'B-'\n  }, {\n    label: 'AB+',\n    value: 'AB+'\n  }, {\n    label: 'AB-',\n    value: 'AB-'\n  }, {\n    label: 'O+',\n    value: 'O+'\n  }, {\n    label: 'O-',\n    value: 'O-'\n  }]),\n      bloodGroups = _useState2[0],\n      setBloodGroups = _useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      var value = name === 'photo' ? e.target.files[0] : e;\n      var userData = new FormData();\n      userData.set(name, value);\n      setValues(_objectSpread({}, values, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"userData\", userData), _defineProperty(_objectSpread2, \"error\", false), _defineProperty(_objectSpread2, \"success\", false), _objectSpread2)));\n    };\n  };\n\n  var handleBloodChange = function handleBloodChange(e, _ref) {\n    var value = _ref.value;\n    userData.set('blood', e);\n    setValues(_objectSpread({}, values, {\n      blood: e\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      loading: true\n    }));\n    update(token, userData).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          success: false,\n          loading: false\n        }));\n      } else {\n        updateUser(data, function () {\n          setValues(_objectSpread({}, values, {\n            username: data.username,\n            name: data.name,\n            email: data.email,\n            avatar: data.avatar,\n            cover: data.cover,\n            about: data.about,\n            password: '',\n            blood: data.blood,\n            contact: data.contact,\n            address: data.address,\n            success: true,\n            loading: false\n          }));\n        });\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Grid, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Row, {\n    className: \"show-grid my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Form, {\n    fluid: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(FlexboxGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(FlexboxGrid.Item, {\n    colspan: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), __jsx(FlexboxGrid.Item, {\n    colspan: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Username\"), __jsx(FormControl, {\n    value: username,\n    onChange: handleChange('username'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Full Name\"), __jsx(FormControl, {\n    value: name,\n    onChange: handleChange('name'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Email\"), __jsx(FormControl, {\n    value: email,\n    onChange: handleChange('email'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"About\"), __jsx(FormControl, {\n    placeholder: \"Write about yourself\",\n    componentClass: \"textarea\",\n    rows: 5,\n    value: about,\n    onChange: handleChange('about'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(SelectPicker, {\n    block: true,\n    data: bloodGroups,\n    value: blood,\n    onChange: handleBloodChange,\n    placeholder: \"Blood Group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Contact No\"), __jsx(FormControl, {\n    value: contact,\n    onChange: handleChange('contact'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Address\"), __jsx(FormControl, {\n    value: address,\n    onChange: handleChange('address'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })))), __jsx(Button, {\n    appearance: \"primary\",\n    block: true,\n    type: \"submit\",\n    className: \"my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Submit\"))))));\n};\n\nexport default ProfileUpdate;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/auth/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","updateUser","getProfile","update","API","imageupload","Form","FormGroup","FormControl","ControlLabel","HelpBlock","Grid","Row","Col","SelectPicker","Button","FlexboxGrid","ProfileUpdate","username","name","email","avatar","cover","about","blood","contact","address","password","error","success","loading","photo","userData","values","setValues","token","init","then","data","FormData","label","value","bloodGroups","setBloodGroups","handleChange","e","target","files","set","handleBloodChange","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\r\nimport { getProfile, update } from '../../actions/user';\r\nimport { API } from '../../config';\r\nimport { imageupload } from '../../actions/imgur';\r\n\r\nimport {\r\n\tForm,\r\n\tFormGroup,\r\n\tFormControl,\r\n\tControlLabel,\r\n\tHelpBlock,\r\n\tGrid,\r\n\tRow,\r\n\tCol,\r\n\tSelectPicker,\r\n\tButton,\r\n\tFlexboxGrid\r\n} from 'rsuite';\r\n\r\nconst ProfileUpdate = () => {\r\n\tconst [ values, setValues ] = useState({\r\n\t\tusername: '',\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tavatar: '',\r\n\t\tcover: '',\r\n\t\tabout: '',\r\n\t\tblood: '',\r\n\t\tcontact: '',\r\n\t\taddress: '',\r\n\t\tpassword: '',\r\n\t\terror: false,\r\n\t\tsuccess: false,\r\n\t\tloading: false,\r\n\t\tphoto: '',\r\n\t\tuserData: ''\r\n\t});\r\n\r\n\tconst token = getCookie('token');\r\n\tconst {\r\n\t\tusername,\r\n\t\tname,\r\n\t\temail,\r\n\t\tavatar,\r\n\t\tcover,\r\n\t\tabout,\r\n\t\tblood,\r\n\t\tcontact,\r\n\t\taddress,\r\n\t\tpassword,\r\n\t\terror,\r\n\t\tsuccess,\r\n\t\tloading,\r\n\t\tphoto,\r\n\t\tuserData\r\n\t} = values;\r\n\r\n\tconst init = () => {\r\n\t\tgetProfile(token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tusername: data.username,\r\n\t\t\t\t\tname: data.name,\r\n\t\t\t\t\temail: data.email,\r\n\t\t\t\t\tavatar: data.avatar,\r\n\t\t\t\t\tcover: data.cover,\r\n\t\t\t\t\tabout: data.about,\r\n\t\t\t\t\tblood: data.blood,\r\n\t\t\t\t\tcontact: data.contact,\r\n                    address: data.address,\r\n                    userData: new FormData()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tinit();\r\n\t}, []);\r\n\r\n\tconst [ bloodGroups, setBloodGroups ] = useState([\r\n\t\t{ label: 'A+', value: 'A+' },\r\n\t\t{ label: 'A-', value: 'A-' },\r\n\t\t{ label: 'B+', value: 'B+' },\r\n\t\t{ label: 'B-', value: 'B-' },\r\n\t\t{ label: 'AB+', value: 'AB+' },\r\n\t\t{ label: 'AB-', value: 'AB-' },\r\n\t\t{ label: 'O+', value: 'O+' },\r\n\t\t{ label: 'O-', value: 'O-' }\r\n\t]);\r\n\r\n\tconst handleChange = (name) => (e) => {\r\n\t\tconst value = name === 'photo' ? e.target.files[0] : e;\r\n\t\tlet userData = new FormData();\r\n\t\tuserData.set(name, value);\r\n\t\tsetValues({ ...values, [name]: value, userData: userData, error: false, success: false });\r\n\t};\r\n\r\n\tconst handleBloodChange = (e, { value }) => {\r\n        userData.set('blood', e);\r\n        setValues({ ...values, blood: e });\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tupdate(token, userData).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error, success: false, loading: false });\r\n\t\t\t} else {\r\n\t\t\t\tupdateUser(data, () => {\r\n\t\t\t\t\tsetValues({\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\tusername: data.username,\r\n\t\t\t\t\t\tname: data.name,\r\n\t\t\t\t\t\temail: data.email,\r\n\t\t\t\t\t\tavatar: data.avatar,\r\n\t\t\t\t\t\tcover: data.cover,\r\n\t\t\t\t\t\tabout: data.about,\r\n\t\t\t\t\t\tpassword: '',\r\n\t\t\t\t\t\tblood: data.blood,\r\n\t\t\t\t\t\tcontact: data.contact,\r\n\t\t\t\t\t\taddress: data.address,\r\n\t\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid fluid>\r\n\t\t\t\t<Row className=\"show-grid my-3\">\r\n\t\t\t\t\t<Col xs={24}>\r\n\t\t\t\t\t\t<Form fluid onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={12} />\r\n\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={12}>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={username} onChange={handleChange('username')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Full Name</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={name} onChange={handleChange('name')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Email</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={email} onChange={handleChange('email')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>About</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write about yourself\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponentClass=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\t\trows={5}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={about}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('about')}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<SelectPicker\r\n\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\tdata={bloodGroups}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={blood}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleBloodChange}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Blood Group\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Contact No</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={contact} onChange={handleChange('contact')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Address</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={address} onChange={handleChange('address')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t</FlexboxGrid>\r\n\r\n\t\t\t\t\t\t\t<Button appearance=\"primary\" block type=\"submit\" className=\"my-3\">\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Grid>\r\n\t\t\t{/* <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <img\r\n                            src={`${API}/user/photo/${username}`}\r\n                            className=\"img img-fluid img-thumbnail mb-3\"\r\n                            style={{ maxHeight: 'auto', maxWidth: '100%' }}\r\n                            alt=\"user profile\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-8 mb-5\">\r\n                        {showSuccess()}\r\n                        {showError()}\r\n                        {showLoading()}\r\n                        {profileUpdateForm()}\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProfileUpdate;\r\n"]},"metadata":{},"sourceType":"module"}
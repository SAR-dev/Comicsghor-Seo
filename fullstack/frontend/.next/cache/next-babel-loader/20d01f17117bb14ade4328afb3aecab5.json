{"ast":null,"code":"import { API_IMGUR } from '../config';\nexport const imageupload = img => {\n  let formData = new FormData();\n  formData.append('image', img);\n  return fetch('https://api.imgur.com/3/image/', {\n    method: \"POST\",\n    headers: {\n      'Authorization': `Client-ID ${API_IMGUR}`\n    },\n    body: formData\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; // IMAGE UPLOAD CODE\n// handleImage(event) {\n//     this.setState({ uploading: true })\n//     var fileInput = false\n//     if (!event.target.files[0] || event.target.files[0].size > 19922944) {\n//         this.setState({ imageError: true, uploading: false })\n//     }\n//     if (event.target.files[0]) {\n//         fileInput = true\n//     }\n//     if (fileInput) {\n//         var img = event.target.files[0]\n//         imageupload(img).then(res => {\n//             let imgArray = this.state.image\n//             imgArray.push(res.data.id)\n//             this.setState({ image: imgArray, imageError: false, uploading: false })\n//             this.postData.set('image', imgArray)\n//         }\n//         )\n//     }\n// };\n// deleteImage = (e, i) => {\n//     e.preventDefault();\n//     let imgList = this.state.image\n//     imgList.splice(i, 1)\n//     this.setState({image: imgList})\n//     this.postData.set('image', imgList)\n// };\n\n{\n  /* <input type=\"file\" accept=\"image/*\" onChange={this.handleImage} id=\"image-input\" className={imageError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm is-valid\"} />       */\n}","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/actions/imgur.js"],"names":["API_IMGUR","imageupload","img","formData","FormData","append","fetch","method","headers","body","then","response","json","catch","err","console","log"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,OAAO,MAAMC,WAAW,GAAIC,GAAD,IAAS;AAChC,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,GAAzB;AACA,SAAOI,KAAK,CAAC,gCAAD,EAAmC;AAC3CC,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,OAAO,EAAE;AACL,uBAAkB,aAAYR,SAAU;AADnC,KAFkC;AAK3CS,IAAAA,IAAI,EAAEN;AALqC,GAAnC,CAAL,CAOFO,IAPE,CAOGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GATE,EAUFC,KAVE,CAUIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVX,CAAP;AAWH,CAdM,C,CAgBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAC;AAA6M","sourcesContent":["import { API_IMGUR } from '../config';\r\n\r\nexport const imageupload = (img) => {\r\n    let formData = new FormData();\r\n    formData.append('image', img);\r\n    return fetch('https://api.imgur.com/3/image/', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Authorization': `Client-ID ${API_IMGUR}` \r\n        },\r\n        body: formData\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\n// IMAGE UPLOAD CODE\r\n\r\n// handleImage(event) {\r\n//     this.setState({ uploading: true })\r\n//     var fileInput = false\r\n//     if (!event.target.files[0] || event.target.files[0].size > 19922944) {\r\n//         this.setState({ imageError: true, uploading: false })\r\n//     }\r\n//     if (event.target.files[0]) {\r\n//         fileInput = true\r\n//     }\r\n//     if (fileInput) {\r\n//         var img = event.target.files[0]\r\n//         imageupload(img).then(res => {\r\n//             let imgArray = this.state.image\r\n//             imgArray.push(res.data.id)\r\n//             this.setState({ image: imgArray, imageError: false, uploading: false })\r\n//             this.postData.set('image', imgArray)\r\n//         }\r\n//         )\r\n//     }\r\n// };\r\n\r\n// deleteImage = (e, i) => {\r\n//     e.preventDefault();\r\n//     let imgList = this.state.image\r\n//     imgList.splice(i, 1)\r\n//     this.setState({image: imgList})\r\n//     this.postData.set('image', imgList)\r\n// };\r\n\r\n{/* <input type=\"file\" accept=\"image/*\" onChange={this.handleImage} id=\"image-input\" className={imageError ? \"form-control form-control-sm is-invalid\" : \"form-control form-control-sm is-valid\"} />       */}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\auth\\\\ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\nimport { API } from '../../config';\nimport { imageupload } from '../../actions/imgur';\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, Grid, Row, Col, SelectPicker, Button, FlexboxGrid } from 'rsuite';\n\nconst ProfileUpdate = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    username: '',\n    name: '',\n    email: '',\n    avatar: '',\n    cover: '',\n    about: '',\n    blood: '',\n    contact: '',\n    address: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: ''\n  });\n  const token = getCookie('token');\n  const {\n    username,\n    name,\n    email,\n    avatar,\n    cover,\n    about,\n    blood,\n    contact,\n    address,\n    password,\n    error,\n    success,\n    loading,\n    photo,\n    userData\n  } = values;\n\n  const init = () => {\n    getProfile(token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          avatar: data.avatar,\n          cover: data.cover,\n          about: data.about,\n          blood: data.blood,\n          contact: data.contact,\n          address: data.address\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  const {\n    0: bloodGroups,\n    1: setBloodGroups\n  } = useState([{\n    label: 'A+',\n    value: 'A+'\n  }, {\n    label: 'A-',\n    value: 'A-'\n  }, {\n    label: 'B+',\n    value: 'B+'\n  }, {\n    label: 'B-',\n    value: 'B-'\n  }, {\n    label: 'AB+',\n    value: 'AB+'\n  }, {\n    label: 'AB-',\n    value: 'AB-'\n  }, {\n    label: 'O+',\n    value: 'O+'\n  }, {\n    label: 'O-',\n    value: 'O-'\n  }]);\n\n  const handleChange = name => e => {\n    const value = name === 'photo' ? e.target.files[0] : e;\n    let userData = new FormData();\n    userData.set(name, value);\n    setValues(_objectSpread({}, values, {\n      [name]: value,\n      userData: userData,\n      error: false,\n      success: false\n    }));\n  };\n\n  const handleBloodChange = (e, {\n    value\n  }) => {\n    userData.set('blood', e);\n    setValues(_objectSpread({}, values, {\n      blood: e\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      loading: true\n    }));\n    update(token, userData).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          success: false,\n          loading: false\n        }));\n      } else {\n        updateUser(data, () => {\n          setValues(_objectSpread({}, values, {\n            username: data.username,\n            name: data.name,\n            email: data.email,\n            avatar: data.avatar,\n            cover: data.cover,\n            about: data.about,\n            password: '',\n            blood: data.blood,\n            contact: data.contact,\n            address: data.address,\n            success: true,\n            loading: false\n          }));\n        });\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Grid, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Row, {\n    className: \"show-grid my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Form, {\n    fluid: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(FlexboxGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(FlexboxGrid.Item, {\n    colspan: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), __jsx(FlexboxGrid.Item, {\n    colspan: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Username\"), __jsx(FormControl, {\n    value: username,\n    onChange: handleChange('username'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Full Name\"), __jsx(FormControl, {\n    value: name,\n    onChange: handleChange('name'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Email\"), __jsx(FormControl, {\n    value: email,\n    onChange: handleChange('email'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"About\"), __jsx(FormControl, {\n    placeholder: \"Write about yourself\",\n    componentClass: \"textarea\",\n    rows: 5,\n    value: about,\n    onChange: handleChange('about'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(SelectPicker, {\n    block: true,\n    data: bloodGroups,\n    value: blood,\n    onChange: handleBloodChange,\n    placeholder: \"Blood Group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Contact No\"), __jsx(FormControl, {\n    value: contact,\n    onChange: handleChange('contact'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Address\"), __jsx(FormControl, {\n    value: address,\n    onChange: handleChange('address'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })))), __jsx(Button, {\n    appearance: \"primary\",\n    block: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Submit\"))))));\n};\n\nexport default ProfileUpdate;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/auth/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","updateUser","getProfile","update","API","imageupload","Form","FormGroup","FormControl","ControlLabel","HelpBlock","Grid","Row","Col","SelectPicker","Button","FlexboxGrid","ProfileUpdate","values","setValues","username","name","email","avatar","cover","about","blood","contact","address","password","error","success","loading","photo","userData","token","init","then","data","bloodGroups","setBloodGroups","label","value","handleChange","e","target","files","FormData","set","handleBloodChange","handleSubmit","preventDefault"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,QAA8C,oBAA9C;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,oBAAnC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SACCC,IADD,EAECC,SAFD,EAGCC,WAHD,EAICC,YAJD,EAKCC,SALD,EAMCC,IAND,EAOCC,GAPD,EAQCC,GARD,EASCC,YATD,EAUCC,MAVD,EAWCC,WAXD,QAYO,QAZP;;AAcA,MAAMC,aAAa,GAAG,MAAM;AAC3B,QAAM;AAAA,OAAEC,MAAF;AAAA,OAAUC;AAAV,MAAwBvB,QAAQ,CAAC;AACtCwB,IAAAA,QAAQ,EAAE,EAD4B;AAEtCC,IAAAA,IAAI,EAAE,EAFgC;AAGtCC,IAAAA,KAAK,EAAE,EAH+B;AAItCC,IAAAA,MAAM,EAAE,EAJ8B;AAKtCC,IAAAA,KAAK,EAAE,EAL+B;AAMtCC,IAAAA,KAAK,EAAE,EAN+B;AAOtCC,IAAAA,KAAK,EAAE,EAP+B;AAQtCC,IAAAA,OAAO,EAAE,EAR6B;AAStCC,IAAAA,OAAO,EAAE,EAT6B;AAUtCC,IAAAA,QAAQ,EAAE,EAV4B;AAWtCC,IAAAA,KAAK,EAAE,KAX+B;AAYtCC,IAAAA,OAAO,EAAE,KAZ6B;AAatCC,IAAAA,OAAO,EAAE,KAb6B;AActCC,IAAAA,KAAK,EAAE,EAd+B;AAetCC,IAAAA,QAAQ,EAAE;AAf4B,GAAD,CAAtC;AAkBA,QAAMC,KAAK,GAAGpC,SAAS,CAAC,OAAD,CAAvB;AACA,QAAM;AACLqB,IAAAA,QADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,MAJK;AAKLC,IAAAA,KALK;AAMLC,IAAAA,KANK;AAOLC,IAAAA,KAPK;AAQLC,IAAAA,OARK;AASLC,IAAAA,OATK;AAULC,IAAAA,QAVK;AAWLC,IAAAA,KAXK;AAYLC,IAAAA,OAZK;AAaLC,IAAAA,OAbK;AAcLC,IAAAA,KAdK;AAeLC,IAAAA;AAfK,MAgBFhB,MAhBJ;;AAkBA,QAAMkB,IAAI,GAAG,MAAM;AAClBlC,IAAAA,UAAU,CAACiC,KAAD,CAAV,CAAkBE,IAAlB,CAAwBC,IAAD,IAAU;AAChC,UAAIA,IAAI,CAACR,KAAT,EAAgB;AACfX,QAAAA,SAAS,mBAAMD,MAAN;AAAcY,UAAAA,KAAK,EAAEQ,IAAI,CAACR;AAA1B,WAAT;AACA,OAFD,MAEO;AACNX,QAAAA,SAAS,mBACLD,MADK;AAERE,UAAAA,QAAQ,EAAEkB,IAAI,CAAClB,QAFP;AAGRC,UAAAA,IAAI,EAAEiB,IAAI,CAACjB,IAHH;AAIRC,UAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAJJ;AAKRC,UAAAA,MAAM,EAAEe,IAAI,CAACf,MALL;AAMRC,UAAAA,KAAK,EAAEc,IAAI,CAACd,KANJ;AAORC,UAAAA,KAAK,EAAEa,IAAI,CAACb,KAPJ;AAQRC,UAAAA,KAAK,EAAEY,IAAI,CAACZ,KARJ;AASRC,UAAAA,OAAO,EAAEW,IAAI,CAACX,OATN;AAURC,UAAAA,OAAO,EAAEU,IAAI,CAACV;AAVN,WAAT;AAYA;AACD,KAjBD;AAkBA,GAnBD;;AAqBA/B,EAAAA,SAAS,CAAC,MAAM;AACfuC,IAAAA,IAAI;AACJ,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAA,OAAEG,WAAF;AAAA,OAAeC;AAAf,MAAkC5C,QAAQ,CAAC,CAChD;AAAE6C,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADgD,EAEhD;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAFgD,EAGhD;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAHgD,EAIhD;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAJgD,EAKhD;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALgD,EAMhD;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GANgD,EAOhD;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAPgD,EAQhD;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GARgD,CAAD,CAAhD;;AAWA,QAAMC,YAAY,GAAItB,IAAD,IAAWuB,CAAD,IAAO;AACrC,UAAMF,KAAK,GAAGrB,IAAI,KAAK,OAAT,GAAmBuB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAnB,GAAuCF,CAArD;AACA,QAAIV,QAAQ,GAAG,IAAIa,QAAJ,EAAf;AACAb,IAAAA,QAAQ,CAACc,GAAT,CAAa3B,IAAb,EAAmBqB,KAAnB;AACAvB,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACG,IAAD,GAAQqB,KAAtB;AAA6BR,MAAAA,QAAQ,EAAEA,QAAvC;AAAiDJ,MAAAA,KAAK,EAAE,KAAxD;AAA+DC,MAAAA,OAAO,EAAE;AAAxE,OAAT;AACA,GALD;;AAOA,QAAMkB,iBAAiB,GAAG,CAACL,CAAD,EAAI;AAAEF,IAAAA;AAAF,GAAJ,KAAkB;AACrCR,IAAAA,QAAQ,CAACc,GAAT,CAAa,OAAb,EAAsBJ,CAAtB;AACAzB,IAAAA,SAAS,mBAAMD,MAAN;AAAcQ,MAAAA,KAAK,EAAEkB;AAArB,OAAT;AACN,GAHD;;AAKA,QAAMM,YAAY,GAAIN,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACO,cAAF;AACAhC,IAAAA,SAAS,mBAAMD,MAAN;AAAcc,MAAAA,OAAO,EAAE;AAAvB,OAAT;AACA7B,IAAAA,MAAM,CAACgC,KAAD,EAAQD,QAAR,CAAN,CAAwBG,IAAxB,CAA8BC,IAAD,IAAU;AACtC,UAAIA,IAAI,CAACR,KAAT,EAAgB;AACfX,QAAAA,SAAS,mBAAMD,MAAN;AAAcY,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KAA1B;AAAiCC,UAAAA,OAAO,EAAE,KAA1C;AAAiDC,UAAAA,OAAO,EAAE;AAA1D,WAAT;AACA,OAFD,MAEO;AACN/B,QAAAA,UAAU,CAACqC,IAAD,EAAO,MAAM;AACtBnB,UAAAA,SAAS,mBACLD,MADK;AAERE,YAAAA,QAAQ,EAAEkB,IAAI,CAAClB,QAFP;AAGRC,YAAAA,IAAI,EAAEiB,IAAI,CAACjB,IAHH;AAIRC,YAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAJJ;AAKRC,YAAAA,MAAM,EAAEe,IAAI,CAACf,MALL;AAMRC,YAAAA,KAAK,EAAEc,IAAI,CAACd,KANJ;AAORC,YAAAA,KAAK,EAAEa,IAAI,CAACb,KAPJ;AAQRI,YAAAA,QAAQ,EAAE,EARF;AASRH,YAAAA,KAAK,EAAEY,IAAI,CAACZ,KATJ;AAURC,YAAAA,OAAO,EAAEW,IAAI,CAACX,OAVN;AAWRC,YAAAA,OAAO,EAAEU,IAAI,CAACV,OAXN;AAYRG,YAAAA,OAAO,EAAE,IAZD;AAaRC,YAAAA,OAAO,EAAE;AAbD,aAAT;AAeA,SAhBS,CAAV;AAiBA;AACD,KAtBD;AAuBA,GA1BD;;AA4BA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,QAAQ,EAAEkB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,OAAO,EAAE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,OAAO,EAAE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC,MAAC,WAAD;AAAa,IAAA,KAAK,EAAE9B,QAApB;AAA8B,IAAA,QAAQ,EAAEuB,YAAY,CAAC,UAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,EAKC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,EAEC,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEtB,IAApB;AAA0B,IAAA,QAAQ,EAAEsB,YAAY,CAAC,MAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CALD,EASC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEC,MAAC,WAAD;AAAa,IAAA,KAAK,EAAErB,KAApB;AAA2B,IAAA,QAAQ,EAAEqB,YAAY,CAAC,OAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CATD,EAaC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEC,MAAC,WAAD;AACC,IAAA,WAAW,EAAC,sBADb;AAEC,IAAA,cAAc,EAAC,UAFhB;AAGC,IAAA,IAAI,EAAE,CAHP;AAIC,IAAA,KAAK,EAAElB,KAJR;AAKC,IAAA,QAAQ,EAAEkB,YAAY,CAAC,OAAD,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAbD,EAuBC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAEJ,WAFP;AAGC,IAAA,KAAK,EAAEb,KAHR;AAIC,IAAA,QAAQ,EAAEuB,iBAJX;AAKC,IAAA,WAAW,EAAC,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAvBD,EAgCC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEC,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEtB,OAApB;AAA6B,IAAA,QAAQ,EAAEgB,YAAY,CAAC,SAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAhCD,EAoCC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEC,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEf,OAApB;AAA6B,IAAA,QAAQ,EAAEe,YAAY,CAAC,SAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CApCD,CAFD,CADD,EA8CC,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,SAAnB;AAA6B,IAAA,KAAK,MAAlC;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CD,CADD,CADD,CADD,CADD,CADD;AA8EA,CAhMD;;AAkMA,eAAe1B,aAAf","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport { getCookie, isAuth, updateUser } from '../../actions/auth';\r\nimport { getProfile, update } from '../../actions/user';\r\nimport { API } from '../../config';\r\nimport { imageupload } from '../../actions/imgur';\r\n\r\nimport {\r\n\tForm,\r\n\tFormGroup,\r\n\tFormControl,\r\n\tControlLabel,\r\n\tHelpBlock,\r\n\tGrid,\r\n\tRow,\r\n\tCol,\r\n\tSelectPicker,\r\n\tButton,\r\n\tFlexboxGrid\r\n} from 'rsuite';\r\n\r\nconst ProfileUpdate = () => {\r\n\tconst [ values, setValues ] = useState({\r\n\t\tusername: '',\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tavatar: '',\r\n\t\tcover: '',\r\n\t\tabout: '',\r\n\t\tblood: '',\r\n\t\tcontact: '',\r\n\t\taddress: '',\r\n\t\tpassword: '',\r\n\t\terror: false,\r\n\t\tsuccess: false,\r\n\t\tloading: false,\r\n\t\tphoto: '',\r\n\t\tuserData: ''\r\n\t});\r\n\r\n\tconst token = getCookie('token');\r\n\tconst {\r\n\t\tusername,\r\n\t\tname,\r\n\t\temail,\r\n\t\tavatar,\r\n\t\tcover,\r\n\t\tabout,\r\n\t\tblood,\r\n\t\tcontact,\r\n\t\taddress,\r\n\t\tpassword,\r\n\t\terror,\r\n\t\tsuccess,\r\n\t\tloading,\r\n\t\tphoto,\r\n\t\tuserData\r\n\t} = values;\r\n\r\n\tconst init = () => {\r\n\t\tgetProfile(token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tusername: data.username,\r\n\t\t\t\t\tname: data.name,\r\n\t\t\t\t\temail: data.email,\r\n\t\t\t\t\tavatar: data.avatar,\r\n\t\t\t\t\tcover: data.cover,\r\n\t\t\t\t\tabout: data.about,\r\n\t\t\t\t\tblood: data.blood,\r\n\t\t\t\t\tcontact: data.contact,\r\n\t\t\t\t\taddress: data.address\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tinit();\r\n\t}, []);\r\n\r\n\tconst [ bloodGroups, setBloodGroups ] = useState([\r\n\t\t{ label: 'A+', value: 'A+' },\r\n\t\t{ label: 'A-', value: 'A-' },\r\n\t\t{ label: 'B+', value: 'B+' },\r\n\t\t{ label: 'B-', value: 'B-' },\r\n\t\t{ label: 'AB+', value: 'AB+' },\r\n\t\t{ label: 'AB-', value: 'AB-' },\r\n\t\t{ label: 'O+', value: 'O+' },\r\n\t\t{ label: 'O-', value: 'O-' }\r\n\t]);\r\n\r\n\tconst handleChange = (name) => (e) => {\r\n\t\tconst value = name === 'photo' ? e.target.files[0] : e;\r\n\t\tlet userData = new FormData();\r\n\t\tuserData.set(name, value);\r\n\t\tsetValues({ ...values, [name]: value, userData: userData, error: false, success: false });\r\n\t};\r\n\r\n\tconst handleBloodChange = (e, { value }) => {\r\n        userData.set('blood', e);\r\n        setValues({ ...values, blood: e });\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tupdate(token, userData).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error, success: false, loading: false });\r\n\t\t\t} else {\r\n\t\t\t\tupdateUser(data, () => {\r\n\t\t\t\t\tsetValues({\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\tusername: data.username,\r\n\t\t\t\t\t\tname: data.name,\r\n\t\t\t\t\t\temail: data.email,\r\n\t\t\t\t\t\tavatar: data.avatar,\r\n\t\t\t\t\t\tcover: data.cover,\r\n\t\t\t\t\t\tabout: data.about,\r\n\t\t\t\t\t\tpassword: '',\r\n\t\t\t\t\t\tblood: data.blood,\r\n\t\t\t\t\t\tcontact: data.contact,\r\n\t\t\t\t\t\taddress: data.address,\r\n\t\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid fluid>\r\n\t\t\t\t<Row className=\"show-grid my-3\">\r\n\t\t\t\t\t<Col xs={24}>\r\n\t\t\t\t\t\t<Form fluid onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={12} />\r\n\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={12}>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={username} onChange={handleChange('username')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Full Name</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={name} onChange={handleChange('name')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Email</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={email} onChange={handleChange('email')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>About</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write about yourself\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponentClass=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\t\trows={5}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={about}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('about')}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<SelectPicker\r\n\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\tdata={bloodGroups}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={blood}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleBloodChange}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Blood Group\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Contact No</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={contact} onChange={handleChange('contact')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Address</ControlLabel>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl value={address} onChange={handleChange('address')} />\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t</FlexboxGrid>\r\n\r\n\t\t\t\t\t\t\t<Button appearance=\"primary\" block type=\"submit\">\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Grid>\r\n\t\t\t{/* <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <img\r\n                            src={`${API}/user/photo/${username}`}\r\n                            className=\"img img-fluid img-thumbnail mb-3\"\r\n                            style={{ maxHeight: 'auto', maxWidth: '100%' }}\r\n                            alt=\"user profile\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-8 mb-5\">\r\n                        {showSuccess()}\r\n                        {showError()}\r\n                        {showLoading()}\r\n                        {profileUpdateForm()}\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProfileUpdate;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\crud\\\\BlogRead.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\nimport { Grid, Row, Col, ButtonToolbar, Button, Icon, FlexboxGrid, Notification } from 'rsuite';\n\nvar BlogRead = function BlogRead(_ref) {\n  var username = _ref.username;\n\n  var _useState = useState([]),\n      blogs = _useState[0],\n      setBlogs = _useState[1];\n\n  var _useState2 = useState(''),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var token = getCookie('token');\n  useEffect(function () {\n    loadBlogs();\n  }, []);\n\n  var loadBlogs = function loadBlogs() {\n    list(username).then(function (data) {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setBlogs(data);\n      }\n    });\n  };\n\n  var deleteBlog = function deleteBlog(slug) {\n    removeBlog(slug, token).then(function (data) {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setMessage(data.message);\n        loadBlogs();\n        open(data.message);\n      }\n    });\n  };\n\n  var open = function open(msg) {\n    Notification['success']({\n      title: 'Success',\n      description: msg\n    });\n  };\n\n  var deleteConfirm = function deleteConfirm(slug) {\n    var answer = window.confirm('Are you sure you want to delete your blog?');\n\n    if (answer) {\n      deleteBlog(slug);\n    }\n  };\n\n  var showUpdateButton = function showUpdateButton(blog) {\n    if (isAuth() && isAuth().role === 0) {\n      return __jsx(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          return Router.push(\"/user/crud/\".concat(blog.slug));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(Icon, {\n        icon: \"edit2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \" Edit\");\n    } else if (isAuth() && isAuth().role === 1) {\n      return __jsx(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          return Router.push(\"/admin/crud/\".concat(blog.slug));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(Icon, {\n        icon: \"edit2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \" Edit\");\n    }\n  };\n\n  var showAllBlogs = function showAllBlogs() {\n    return blogs.map(function (blog, i) {\n      return __jsx(FlexboxGrid, {\n        key: i,\n        className: \"manage-blog px-3 py-2 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(FlexboxGrid.Item, {\n        colspan: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, blog.title), __jsx(\"p\", {\n        className: \"writer grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(Icon, {\n        icon: \"user\",\n        className: \"pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \" \", blog.postedBy.name, ' ', __jsx(Icon, {\n        icon: \"calendar\",\n        className: \"px-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \" \", moment(blog.updatedAt).fromNow())), __jsx(FlexboxGrid.Item, {\n        colspan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          return deleteConfirm(blog.slug);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, __jsx(Icon, {\n        icon: \"trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \" Delete\"), showUpdateButton(blog))));\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Grid, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, showAllBlogs())), __jsx(Modal, {\n    backdrop: \"static\",\n    show: message.length > 0 ? true : false,\n    onHide: function onHide() {\n      return setMessage('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"info\",\n    style: {\n      color: '#0099e5'\n    },\n    size: \"lg\",\n    className: \"pr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), \"Message\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, message), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setMessage('');\n    },\n    appearance: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"OK, Got it\")))));\n};\n\nexport default BlogRead;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/crud/BlogRead.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","list","removeBlog","moment","Grid","Row","Col","ButtonToolbar","Button","Icon","FlexboxGrid","Notification","BlogRead","username","blogs","setBlogs","message","setMessage","token","loadBlogs","then","data","error","console","log","deleteBlog","slug","open","msg","title","description","deleteConfirm","answer","window","confirm","showUpdateButton","blog","role","push","showAllBlogs","map","i","postedBy","name","updatedAt","fromNow","length","color"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\n\nimport { Grid, Row, Col, ButtonToolbar, Button, Icon, FlexboxGrid, Notification  } from 'rsuite';\n\nconst BlogRead = ({ username }) => {\n\tconst [ blogs, setBlogs ] = useState([]);\n\tconst [ message, setMessage ] = useState('');\n\tconst token = getCookie('token');\n\n\tuseEffect(() => {\n\t\tloadBlogs();\n\t}, []);\n\n\tconst loadBlogs = () => {\n\t\tlist(username).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetBlogs(data);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst deleteBlog = (slug) => {\n\t\tremoveBlog(slug, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetMessage(data.message);\n\t\t\t\tloadBlogs();\n\t\t\t\topen(data.message)\n\t\t\t}\n\t\t});\n\t};\n\n\tconst open = (msg) => {\n\t\tNotification['success']({\n\t\t  title: 'Success',\n\t\t  description: msg\n\t\t});\n\t  }\n\n\tconst deleteConfirm = (slug) => {\n\t\tlet answer = window.confirm('Are you sure you want to delete your blog?');\n\t\tif (answer) {\n\t\t\tdeleteBlog(slug);\n\t\t}\n\t};\n\n\tconst showUpdateButton = (blog) => {\n\t\tif (isAuth() && isAuth().role === 0) {\n\t\t\treturn (\n\t\t\t\t<Button size=\"sm\" onClick={() => Router.push(`/user/crud/${blog.slug}`)}>\n\t\t\t\t\t<Icon icon=\"edit2\" /> Edit\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else if (isAuth() && isAuth().role === 1) {\n\t\t\treturn (\n\t\t\t\t<Button size=\"sm\" onClick={() => Router.push(`/admin/crud/${blog.slug}`)}>\n\t\t\t\t\t<Icon icon=\"edit2\" /> Edit\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst showAllBlogs = () => {\n\t\treturn blogs.map((blog, i) => {\n\t\t\treturn (\n\t\t\t\t<FlexboxGrid key={i} className=\"manage-blog px-3 py-2 mb-2\">\n\t\t\t\t\t<FlexboxGrid.Item colspan={18}>\n\t\t\t\t\t\t<h4>{blog.title}</h4>\n\t\t\t\t\t\t<p className=\"writer grey-text\">\n\t\t\t\t\t\t\t<Icon icon=\"user\" className=\"pr-2\" /> {blog.postedBy.name}{' '}\n\t\t\t\t\t\t\t<Icon icon=\"calendar\" className=\"px-2\" /> {moment(blog.updatedAt).fromNow()}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t\t<FlexboxGrid.Item colspan={6}>\n\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t<Button size=\"sm\" onClick={() => deleteConfirm(blog.slug)}>\n\t\t\t\t\t\t\t\t<Icon icon=\"trash\" /> Delete\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{showUpdateButton(blog)}\n\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t</FlexboxGrid.Item>\n\t\t\t\t</FlexboxGrid>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"container my-3\">\n\t\t\t\t<Grid fluid>\n\t\t\t\t\t<Row className=\"show-grid\">{showAllBlogs()}</Row>\n\t\t\t\t</Grid>\n\t\t\t\t<Modal backdrop=\"static\" show={message.length > 0 ? true : false} onHide={() => setMessage('')}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t<Icon icon=\"info\" style={{ color: '#0099e5' }} size=\"lg\" className=\"pr-2\" />\n\t\t\t\t\t\tMessage\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>{message}</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button onClick={() => setMessage('')} appearance=\"primary\">\n\t\t\t\t\t\tOK, Got it\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default BlogRead;\n"]},"metadata":{},"sourceType":"module"}
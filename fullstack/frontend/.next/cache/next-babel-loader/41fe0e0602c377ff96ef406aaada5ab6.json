{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\crud\\\\BlogUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect, useRef } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { imageupload } from '../../actions/imgur';\nimport { getTags } from '../../actions/tag';\nimport { singleBlog, updateBlog } from '../../actions/blog';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\nimport '../../node_modules/react-quill/dist/quill.snow.css';\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\nimport { API } from '../../config';\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, TagPicker, FlexboxGrid, SelectPicker, Uploader, Icon, Loader, Button, ButtonToolbar, Modal } from 'rsuite';\n\nconst BlogUpdate = ({\n  router\n}) => {\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    title: '',\n    error: '',\n    success: '',\n    formData: '',\n    title: '',\n    body: '',\n    images: [],\n    uploading: false\n  });\n  const {\n    error,\n    success,\n    formData,\n    title,\n    uploading,\n    images\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    setValues(_objectSpread({}, values, {\n      formData: new FormData()\n    }));\n    initBlog();\n    initCategories();\n    initTags();\n  }, [router]);\n\n  const initBlog = () => {\n    if (router.query.slug) {\n      singleBlog(router.query.slug).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setValues(_objectSpread({}, values, {\n            title: data.title\n          }));\n          setBody(data.body);\n          setCategoriesArray(data.categories);\n          setTagsArray(data.tags);\n        }\n      });\n    }\n  };\n\n  const initCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        const items = [];\n        data.forEach((item, i) => {\n          items[i] = {\n            key: i,\n            value: item._id,\n            label: item.name\n          };\n        });\n        setCategories(items);\n      }\n    });\n  };\n\n  const initTags = () => {\n    getTags().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        const items = [];\n        data.forEach((item, i) => {\n          items[i] = {\n            key: i,\n            value: item._id,\n            label: item.name\n          };\n        });\n        setTags(items);\n      }\n    });\n  };\n\n  const publishBlog = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      uploading: true\n    }));\n    createBlog(formData, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          uploading: false,\n          title: '',\n          error: '',\n          success: `A new blog titled \"${data.title}\" is created`\n        }));\n        setBody('');\n        setCategories([]);\n        setTags([]);\n        setThumbnail('');\n      }\n    });\n  };\n\n  const {\n    0: thumbnail,\n    1: setThumbnail\n  } = useState([]);\n\n  const handleChange = name => e => {\n    const value = e;\n    formData.set(name, value);\n    setValues(_objectSpread({}, values, {\n      [name]: value,\n      formData,\n      error: ''\n    }));\n  };\n\n  const handleImage = (file, callback) => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      callback(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n    formData.set('photo', file);\n  };\n\n  const [fileInfo, setFileInfo] = React.useState(null);\n  const thumbnailStyles = {\n    width: 300,\n    height: 200,\n    marginTop: 0\n  };\n\n  const handleImageArray = event => {\n    setValues(_objectSpread({}, values, {\n      uploading: true\n    }));\n    var fileInput = false;\n\n    if (!event.target.files[0] || event.target.files[0].size > 19922944) {\n      setValues(_objectSpread({}, values, {\n        error: 'Image size is too large!',\n        uploading: false\n      }));\n    }\n\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      var img = event.target.files[0];\n      imageupload(img).then(res => {\n        let imgArray = images;\n        imgArray.push(res.data.id);\n        setValues(_objectSpread({}, values, {\n          images: imgArray,\n          uploading: false\n        }));\n        formData.set('image', imgArray);\n      });\n    }\n  };\n\n  const deleteImage = (e, i) => {\n    e.preventDefault();\n    let imgArray = images;\n    imgArray.splice(i, 1);\n    setValues(_objectSpread({}, values, {\n      images: imgArray\n    }));\n    formData.set('image', imgArray);\n  };\n\n  const handleBody = e => {\n    setBody(e);\n    formData.set('body', e);\n  };\n\n  const {\n    0: tempTags\n  } = useRef();\n\n  const setTagsArray = data => {\n    formData.set('tags', data);\n  };\n\n  const handleTagsChange = (e, {\n    value\n  }) => {\n    formData.set('tags', e);\n  };\n\n  const {\n    0: tempCategories\n  } = useRef();\n\n  const getCategory = () => {\n    return formData.get('categories');\n  };\n\n  const setCategoriesArray = data => {\n    formData.set('categories', data);\n  };\n\n  const handleCategoriesChange = (e, {\n    value\n  }) => {\n    formData.set('categories', e);\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, __jsx(Form, {\n    fluid: true,\n    onSubmit: publishBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Post Title\")), __jsx(FormControl, {\n    placeholder: \"Give an awesome title...\",\n    value: title,\n    onChange: handleChange('title'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Required\")), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Post Body\")), __jsx(ReactQuill, {\n    modules: QuillModules,\n    formats: QuillFormats,\n    value: body,\n    placeholder: \"Write something amazing...\",\n    onChange: handleBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Required\")), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, __jsx(FlexboxGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, __jsx(FlexboxGrid.Item, {\n    colspan: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, __jsx(TagPicker, {\n    block: true,\n    data: tags,\n    value: tempTags,\n    onChange: handleTagsChange,\n    placeholder: \"Select Tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"Required\")), __jsx(FlexboxGrid.Item, {\n    colspan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), __jsx(FlexboxGrid.Item, {\n    colspan: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, __jsx(SelectPicker, {\n    block: true,\n    data: categories,\n    value: tempCategories,\n    defaultValue: getCategory(),\n    onChange: handleCategoriesChange,\n    placeholder: \"Select a Category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Required\")))), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, __jsx(ButtonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, __jsx(Button, {\n    appearance: \"primary\",\n    block: true,\n    type: \"submit\",\n    disabled: uploading ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, \"Submit\")))));\n};\n\nexport default withRouter(BlogUpdate);","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/crud/BlogUpdate.js"],"names":["Link","useState","useEffect","useRef","Router","dynamic","withRouter","getCookie","isAuth","getCategories","imageupload","getTags","singleBlog","updateBlog","ReactQuill","ssr","QuillModules","QuillFormats","API","Form","FormGroup","FormControl","ControlLabel","HelpBlock","TagPicker","FlexboxGrid","SelectPicker","Uploader","Icon","Loader","Button","ButtonToolbar","Modal","BlogUpdate","router","categories","setCategories","tags","setTags","body","setBody","values","setValues","title","error","success","formData","images","uploading","token","FormData","initBlog","initCategories","initTags","query","slug","then","data","console","log","setCategoriesArray","setTagsArray","items","forEach","item","i","key","value","_id","label","name","publishBlog","e","preventDefault","createBlog","setThumbnail","thumbnail","handleChange","set","handleImage","file","callback","reader","FileReader","onloadend","result","readAsDataURL","fileInfo","setFileInfo","React","thumbnailStyles","width","height","marginTop","handleImageArray","event","fileInput","target","files","size","img","res","imgArray","push","id","deleteImage","splice","handleBody","tempTags","handleTagsChange","tempCategories","getCategory","get","handleCategoriesChange"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport Router from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport { withRouter } from 'next/router';\r\nimport { getCookie, isAuth } from '../../actions/auth';\r\nimport { getCategories } from '../../actions/category';\r\nimport { imageupload } from '../../actions/imgur';\r\nimport { getTags } from '../../actions/tag';\r\nimport { singleBlog, updateBlog } from '../../actions/blog';\r\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\r\nimport '../../node_modules/react-quill/dist/quill.snow.css';\r\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\r\nimport { API } from '../../config';\r\n\r\nimport {\r\n\tForm,\r\n\tFormGroup,\r\n\tFormControl,\r\n\tControlLabel,\r\n\tHelpBlock,\r\n\tTagPicker,\r\n\tFlexboxGrid,\r\n\tSelectPicker,\r\n\tUploader,\r\n\tIcon,\r\n\tLoader,\r\n\tButton,\r\n\tButtonToolbar,\r\n\tModal\r\n} from 'rsuite';\r\n\r\nconst BlogUpdate = ({ router }) => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [tags, setTags] = useState([]);\r\n\r\n    const [body, setBody] = useState('');\r\n    const [values, setValues] = useState({\r\n        title: '',\r\n        error: '',\r\n        success: '',\r\n        formData: '',\r\n        title: '',\r\n        body: '',\r\n        images: [],\r\n        uploading: false\r\n    });\r\n\r\n    const { error, success, formData, title, uploading, images } = values;\r\n    const token = getCookie('token');\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n            setValues({ ...values, formData: new FormData() });\r\n            initBlog();\r\n\t\t\tinitCategories();\r\n\t\t\tinitTags();\r\n\t\t},\r\n\t\t[ router ]\r\n    );\r\n    \r\n    const initBlog = () => {\r\n        if (router.query.slug) {\r\n            singleBlog(router.query.slug).then(data => {\r\n                if (data.error) {\r\n                    console.log(data.error);\r\n                } else {\r\n                    setValues({ ...values, title: data.title });\r\n                    setBody(data.body);\r\n                    setCategoriesArray(data.categories);\r\n                    setTagsArray(data.tags);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    \r\n\r\n\tconst initCategories = () => {\r\n\t\tgetCategories().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tconst items = [];\r\n\t\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\t\titems[i] = {\r\n\t\t\t\t\t\tkey: i,\r\n\t\t\t\t\t\tvalue: item._id,\r\n\t\t\t\t\t\tlabel: item.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetCategories(items);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst initTags = () => {\r\n\t\tgetTags().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tconst items = [];\r\n\t\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\t\titems[i] = {\r\n\t\t\t\t\t\tkey: i,\r\n\t\t\t\t\t\tvalue: item._id,\r\n\t\t\t\t\t\tlabel: item.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetTags(items);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst publishBlog = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetValues({ ...values, uploading: true });\r\n\t\tcreateBlog(formData, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tuploading: false,\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\terror: '',\r\n\t\t\t\t\tsuccess: `A new blog titled \"${data.title}\" is created`\r\n\t\t\t\t});\r\n\t\t\t\tsetBody('');\r\n\t\t\t\tsetCategories([]);\r\n\t\t\t\tsetTags([]);\r\n\t\t\t\tsetThumbnail('');\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst [ thumbnail, setThumbnail ] = useState([]);\r\n\r\n\tconst handleChange = (name) => (e) => {\r\n\t\tconst value = e;\r\n\t\tformData.set(name, value);\r\n\t\tsetValues({ ...values, [name]: value, formData, error: '' });\r\n\t};\r\n\r\n\tconst handleImage = (file, callback) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => {\r\n\t\t\tcallback(reader.result);\r\n\t\t};\r\n\t\treader.readAsDataURL(file);\r\n\t\tformData.set('photo', file);\r\n\t};\r\n\r\n\tconst [ fileInfo, setFileInfo ] = React.useState(null);\r\n\r\n\tconst thumbnailStyles = {\r\n\t\twidth: 300,\r\n\t\theight: 200,\r\n\t\tmarginTop: 0\r\n\t};\r\n\r\n\tconst handleImageArray = (event) => {\r\n\t\tsetValues({ ...values, uploading: true });\r\n\t\tvar fileInput = false;\r\n\t\tif (!event.target.files[0] || event.target.files[0].size > 19922944) {\r\n\t\t\tsetValues({ ...values, error: 'Image size is too large!', uploading: false });\r\n\t\t}\r\n\t\tif (event.target.files[0]) {\r\n\t\t\tfileInput = true;\r\n\t\t}\r\n\t\tif (fileInput) {\r\n\t\t\tvar img = event.target.files[0];\r\n\t\t\timageupload(img).then((res) => {\r\n\t\t\t\tlet imgArray = images;\r\n\t\t\t\timgArray.push(res.data.id);\r\n\t\t\t\tsetValues({ ...values, images: imgArray, uploading: false });\r\n\t\t\t\tformData.set('image', imgArray);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteImage = (e, i) => {\r\n\t\te.preventDefault();\r\n\t\tlet imgArray = images;\r\n\t\timgArray.splice(i, 1);\r\n\t\tsetValues({ ...values, images: imgArray });\r\n\t\tformData.set('image', imgArray);\r\n\t};\r\n\r\n\tconst handleBody = (e) => {\r\n\t\tsetBody(e);\r\n\t\tformData.set('body', e);\r\n\t};\r\n\r\n    const [ tempTags ] = useRef();\r\n    \r\n    const setTagsArray = (data) => {\r\n        formData.set('tags', data);\r\n    }\r\n\r\n\tconst handleTagsChange = (e, { value }) => {\r\n\t\tformData.set('tags', e);\r\n\t};\r\n\r\n    const [ tempCategories ] = useRef();\r\n\r\n    const getCategory = () => {\r\n        return formData.get('categories')\r\n    }\r\n    \r\n    const setCategoriesArray = (data) => {\r\n        formData.set('categories', data);\r\n    }\r\n\r\n\tconst handleCategoriesChange = (e, { value }) => {\r\n\t\tformData.set('categories', e);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Form fluid onSubmit={publishBlog}>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\t<h6>Post Title</h6>\r\n\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tplaceholder=\"Give an awesome title...\"\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={handleChange('title')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\t<h6>Post Body</h6>\r\n\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t<ReactQuill\r\n\t\t\t\t\t\tmodules={QuillModules}\r\n\t\t\t\t\t\tformats={QuillFormats}\r\n\t\t\t\t\t\tvalue={body}\r\n\t\t\t\t\t\tplaceholder=\"Write something amazing...\"\r\n\t\t\t\t\t\tonChange={handleBody}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={11}>\r\n\t\t\t\t\t\t\t<TagPicker\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tdata={tags}\r\n\t\t\t\t\t\t\t\tvalue={tempTags}\r\n\t\t\t\t\t\t\t\tonChange={handleTagsChange}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Select Tags\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={2} />\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={11}>\r\n\t\t\t\t\t\t\t<SelectPicker\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tdata={categories}\r\n                                value={tempCategories}\r\n                                defaultValue={getCategory()}\r\n\t\t\t\t\t\t\t\tonChange={handleCategoriesChange}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Select a Category\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t{/* <FlexboxGrid>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={10}>\r\n\t\t\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\t\t\t<h6 className=\"pt-3\">Select Thumbnail</h6>\r\n\t\t\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t\t\t<Uploader\r\n\t\t\t\t\t\t\t\tfileListVisible={false}\r\n\t\t\t\t\t\t\t\tlistType=\"picture\"\r\n\t\t\t\t\t\t\t\tonUpload={(file) => {\r\n\t\t\t\t\t\t\t\t\thandleImage(file.blobFile, (value) => {\r\n\t\t\t\t\t\t\t\t\t\tsetFileInfo(value);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<button style={thumbnailStyles} type=\"button\">\r\n\t\t\t\t\t\t\t\t\t{fileInfo ? (\r\n\t\t\t\t\t\t\t\t\t\t<img src={fileInfo} className=\"thumbnail-image\" />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Icon icon=\"image\" size=\"5x\" />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Uploader>\r\n\t\t\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t</FlexboxGrid> */}\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t{/* <FormGroup>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={24}>\r\n\t\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\t\t<h6>Add Images</h6>\r\n\t\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t\t<div className=\"imgur-uploader\">\r\n\t\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t\t{images.map((image, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"add-image-grid\" style={{display: 'grid', marginRight: '10px', marginBottom: '10px'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"imgur-Image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://i.imgur.com/${image}m.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"red\" size=\"xs\" onClick={(e) => deleteImage(e, i)}>Delete</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t\t\t<input onChange={handleImageArray} type=\"file\" accept=\"image/*\" className={uploading ? 'disabled-input' : ''} />\r\n\t\t\t\t\t\t\t\t\t<Icon icon=\"upload\" />\r\n\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t<HelpBlock>Optional</HelpBlock>\r\n\t\t\t\t</FormGroup> */}\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t<Button appearance=\"primary\" block type=\"submit\" disabled={uploading ? true : false} >\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\t\t\t{/* <Modal\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tshow={error.length > 0 ? true : false}\r\n\t\t\t\tonHide={() => setValues({ ...values, error: '' })}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>\r\n\t\t\t\t\t\t<Icon icon=\"exclamation-circle\" style={{ color: '#ffc845' }} size=\"lg\" className=\"pr-2\" />\r\n\t\t\t\t\t\tError Occured\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>{error}</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={() => setValues({ ...values, error: '' })} appearance=\"primary\">\r\n\t\t\t\t\t\tOK, Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tshow={success.length > 0 ? true : false}\r\n\t\t\t\tonHide={() => Router.replace('/blogs')}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>\r\n\t\t\t\t\t\t<Icon icon=\"check\" style={{ color: '#00a78e' }} size=\"lg\" className=\"pr-2\" />\r\n\t\t\t\t\t\tSuccessful\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>{success}</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={() => Router.replace('/blogs')} appearance=\"primary\">\r\n\t\t\t\t\t\tOK, Got it\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tshow={uploading}\r\n\t\t\t\tsize=\"xs\"\r\n\t\t\t>\r\n\t\t\t\t<Modal.Body className=\"text-center\">\r\n\t\t\t\t\t<Loader size=\"lg\" />\r\n\t\t\t\t\t<h4 className=\"py-3\">Uploading</h4>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal> */}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(BlogUpdate);\r\n"]},"metadata":{},"sourceType":"module"}
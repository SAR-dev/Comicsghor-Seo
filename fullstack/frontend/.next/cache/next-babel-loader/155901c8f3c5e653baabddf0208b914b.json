{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\pages\\\\profile\\\\[username].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\nimport { userPublicProfile } from '../../actions/user';\nimport { API, DOMAIN, APP_NAME, FB_APP_ID } from '../../config';\nimport moment from 'moment'; // import ContactForm from '../../components/form/ContactForm';\n\nimport Img from 'react-image';\nimport { Grid, Row, Col, FlexboxGrid, Loader, Icon } from 'rsuite';\n\nvar UserProfile = function UserProfile(_ref) {\n  var user = _ref.user,\n      blogs = _ref.blogs,\n      query = _ref.query;\n  // const head = () => (\n  //     <Head>\n  //         <title>\n  //             {user.username} | {APP_NAME}\n  //         </title>\n  //         <meta name=\"description\" content={`Blogs by ${user.username}`} />\n  //         <link rel=\"canonical\" href={`${DOMAIN}/profile/${query.username}`} />\n  //         <meta property=\"og:title\" content={`${user.username}| ${APP_NAME}`} />\n  //         <meta property=\"og:description\" content={`Blogs by ${user.username}`} />\n  //         <meta property=\"og:type\" content=\"webiste\" />\n  //         <meta property=\"og:url\" content={`${DOMAIN}/profile/${query.username}`} />\n  //         <meta property=\"og:site_name\" content={`${APP_NAME}`} />\n  //         <meta property=\"og:image\" content={`${DOMAIN}/static/images/seoblog.jpg`} />\n  //         <meta property=\"og:image:secure_url\" content={`${DOMAIN}/static/images/seoblog.jpg`} />\n  //         <meta property=\"og:image:type\" content=\"image/jpg\" />\n  //         <meta property=\"fb:app_id\" content={`${FB_APP_ID}`} />\n  //     </Head>\n  // );\n  // const showUserBlogs = () => {\n  //     return blogs.map((blog, i) => {\n  //         return (\n  //             <div className=\"mt-4 mb-4\" key={i}>\n  //                 <Link href={`/blogs/${blog.slug}`}>\n  //                     <a className=\"lead\">{blog.title}</a>\n  //                 </Link>\n  //             </div>\n  //         );\n  //     });\n  // };\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Grid, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(FlexboxGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(FlexboxGrid.Item, {\n    colspan: 24,\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Img, {\n    className: \"cover-photo\",\n    src: \"https://i.imgur.com/\".concat(user.cover, \"h.jpg\"),\n    loader: __jsx(Loader, {\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(FlexboxGrid.Item, {\n    colspan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Img, {\n    className: \"profile-photo\",\n    src: \"https://i.imgur.com/\".concat(user.avatar, \"h.jpg\"),\n    loader: __jsx(Loader, {\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), __jsx(FlexboxGrid.Item, {\n    colspan: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(FlexboxGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(FlexboxGrid.Item, {\n    colspan: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"user-circle-o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(\"h4\", {\n    className: \"profile-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, user.name)), __jsx(FlexboxGrid.Item, {\n    colspan: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, user.email)), __jsx(FlexboxGrid.Item, {\n    colspan: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, user.username)))))), __jsx(Col, {\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))))));\n};\n\nUserProfile.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return userPublicProfile(query.username).then(function (data) {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      return {\n        user: data.user,\n        blogs: data.blogs,\n        query: query\n      };\n    }\n  });\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/pages/profile/[username].js"],"names":["Head","Link","Layout","userPublicProfile","API","DOMAIN","APP_NAME","FB_APP_ID","moment","Img","Grid","Row","Col","FlexboxGrid","Loader","Icon","UserProfile","user","blogs","query","cover","avatar","name","email","username","getInitialProps","then","data","error","console","log"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport Layout from '../../components/Layout';\r\nimport { userPublicProfile } from '../../actions/user';\r\nimport { API, DOMAIN, APP_NAME, FB_APP_ID } from '../../config';\r\nimport moment from 'moment';\r\n// import ContactForm from '../../components/form/ContactForm';\r\nimport Img from 'react-image';\r\n\r\nimport { Grid, Row, Col, FlexboxGrid, Loader, Icon } from 'rsuite';\r\n\r\nconst UserProfile = ({ user, blogs, query }) => {\r\n    // const head = () => (\r\n    //     <Head>\r\n    //         <title>\r\n    //             {user.username} | {APP_NAME}\r\n    //         </title>\r\n    //         <meta name=\"description\" content={`Blogs by ${user.username}`} />\r\n    //         <link rel=\"canonical\" href={`${DOMAIN}/profile/${query.username}`} />\r\n    //         <meta property=\"og:title\" content={`${user.username}| ${APP_NAME}`} />\r\n    //         <meta property=\"og:description\" content={`Blogs by ${user.username}`} />\r\n    //         <meta property=\"og:type\" content=\"webiste\" />\r\n    //         <meta property=\"og:url\" content={`${DOMAIN}/profile/${query.username}`} />\r\n    //         <meta property=\"og:site_name\" content={`${APP_NAME}`} />\r\n\r\n    //         <meta property=\"og:image\" content={`${DOMAIN}/static/images/seoblog.jpg`} />\r\n    //         <meta property=\"og:image:secure_url\" content={`${DOMAIN}/static/images/seoblog.jpg`} />\r\n    //         <meta property=\"og:image:type\" content=\"image/jpg\" />\r\n    //         <meta property=\"fb:app_id\" content={`${FB_APP_ID}`} />\r\n    //     </Head>\r\n    // );\r\n\r\n    // const showUserBlogs = () => {\r\n    //     return blogs.map((blog, i) => {\r\n    //         return (\r\n    //             <div className=\"mt-4 mb-4\" key={i}>\r\n    //                 <Link href={`/blogs/${blog.slug}`}>\r\n    //                     <a className=\"lead\">{blog.title}</a>\r\n    //                 </Link>\r\n    //             </div>\r\n    //         );\r\n    //     });\r\n    // };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Layout>\r\n            <div className=\"container\">\r\n                <Grid fluid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={18}>\r\n                            <FlexboxGrid>\r\n                                <FlexboxGrid.Item colspan={24} className=\"text-center\">\r\n                                    <Img \r\n                                        className=\"cover-photo\" \r\n                                        src={`https://i.imgur.com/${user.cover}h.jpg`} \r\n                                        loader={<Loader size=\"md\" />} \r\n                                    />\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={6}>\r\n                                    <Img \r\n                                        className=\"profile-photo\" \r\n                                        src={`https://i.imgur.com/${user.avatar}h.jpg`} \r\n                                        loader={<Loader size=\"md\" />} \r\n                                    />\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={18}>\r\n                                    <FlexboxGrid>\r\n                                        <FlexboxGrid.Item colspan={24}>\r\n                                            <Icon icon=\"user-circle-o\" /><h4 className=\"profile-name\">{user.name}</h4>\r\n                                        </FlexboxGrid.Item>\r\n                                        <FlexboxGrid.Item colspan={24}>\r\n                                            <h4>{user.email}</h4>\r\n                                        </FlexboxGrid.Item>\r\n                                        <FlexboxGrid.Item colspan={24}>\r\n                                            <h4>{user.username}</h4>\r\n                                        </FlexboxGrid.Item>\r\n                                    </FlexboxGrid>\r\n                                </FlexboxGrid.Item>\r\n                            </FlexboxGrid>\r\n                        </Col>\r\n                        <Col xs={6}></Col>\r\n                    </Row>\r\n                </Grid>\r\n            </div>\r\n            </Layout>\r\n            {/* {head()}\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-8\">\r\n                                            <h5>{user.name}</h5>\r\n                                            <p className=\"text-muted\">Joined {moment(user.createdAt).fromNow()}</p>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <img\r\n                                                src={`${API}/user/photo/${user.username}`}\r\n                                                className=\"img img-fluid img-thumbnail mb-3\"\r\n                                                style={{ maxHeight: '100px', maxWidth: '100%' }}\r\n                                                alt=\"user profile\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"container pb-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title bg-primary pt-4 pb-4 pl-4 pr-4 text-white\">\r\n                                        Recent blogs by {user.name}\r\n                                    </h5>\r\n\r\n                                    {showUserBlogs()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title bg-primary pt-4 pb-4 pl-4 pr-4 text-light\">\r\n                                        Message {user.name}\r\n                                    </h5>\r\n                                    <br />\r\n                                    <ContactForm authorEmail={user.email} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nUserProfile.getInitialProps = ({ query }) => {\r\n    return userPublicProfile(query.username).then(data => {\r\n        if (data.error) {\r\n            console.log(data.error);\r\n        } else {\r\n            return { user: data.user, blogs: data.blogs, query };\r\n        }\r\n    });\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}
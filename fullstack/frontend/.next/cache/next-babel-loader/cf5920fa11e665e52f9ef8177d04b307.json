{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\form\\\\ContactForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { emailContactForm } from '../../actions/form';\nimport { isAuth } from '../../actions/auth';\nimport { Form, FormGroup, FormControl, ControlLabel, Button, Icon } from 'rsuite';\n\nvar ContactForm = function ContactForm(_ref) {\n  var authorEmail = _ref.authorEmail;\n\n  var _useState = useState({\n    message: '',\n    name: '',\n    email: '',\n    sent: false,\n    buttonText: 'Send Message',\n    success: false,\n    error: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var message = values.message,\n      name = values.name,\n      email = values.email,\n      sent = values.sent,\n      buttonText = values.buttonText,\n      success = values.success,\n      error = values.error;\n\n  var clickSubmit = function clickSubmit(e) {\n    e.preventDefault();\n    var send_name = isAuth().name;\n    var send_email = isAuth().email;\n    setValues(_objectSpread({}, values, {\n      buttonText: 'Sending...'\n    }));\n    emailContactForm({\n      send_name: send_name,\n      send_email: send_email,\n      message: message\n    }).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          sent: true,\n          name: '',\n          email: '',\n          message: '',\n          buttonText: 'Sent',\n          success: data.success\n        }));\n      }\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setValues(_objectSpread({}, values, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e), _defineProperty(_objectSpread2, \"error\", false), _defineProperty(_objectSpread2, \"success\", false), _defineProperty(_objectSpread2, \"buttonText\", 'Send Message'), _objectSpread2)));\n    };\n  };\n\n  var showSuccessMessage = function showSuccessMessage() {\n    return success && __jsx(\"div\", {\n      className: \"alert alert-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Thank you for contacting us.\");\n  };\n\n  var showErrorMessage = function showErrorMessage() {\n    return __jsx(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, error);\n  };\n\n  var contactForm = function contactForm() {\n    return __jsx(Form, {\n      fluid: true,\n      onSubmit: clickSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Message\"), __jsx(FormControl, {\n      rows: 10,\n      name: \"textarea\",\n      componentClass: \"textarea\",\n      value: message,\n      onChange: handleChange('message'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), __jsx(Button, {\n      color: \"blue\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(Icon, {\n      icon: \"send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \" Send\"));\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, showSuccessMessage(), showErrorMessage(), contactForm());\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/form/ContactForm.js"],"names":["useState","Link","emailContactForm","isAuth","Form","FormGroup","FormControl","ControlLabel","Button","Icon","ContactForm","authorEmail","message","name","email","sent","buttonText","success","error","values","setValues","clickSubmit","e","preventDefault","send_name","send_email","then","data","handleChange","showSuccessMessage","showErrorMessage","display","contactForm"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,YAAvC,EAAqDC,MAArD,EAA6DC,IAA7D,QAAyE,QAAzE;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBACTX,QAAQ,CAAC;AACjCY,IAAAA,OAAO,EAAE,EADwB;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,IAAI,EAAE,KAJ2B;AAKjCC,IAAAA,UAAU,EAAE,cALqB;AAMjCC,IAAAA,OAAO,EAAE,KANwB;AAOjCC,IAAAA,KAAK,EAAE;AAP0B,GAAD,CADC;AAAA,MAC9BC,MAD8B;AAAA,MACtBC,SADsB;;AAAA,MAW7BR,OAX6B,GAW8BO,MAX9B,CAW7BP,OAX6B;AAAA,MAWpBC,IAXoB,GAW8BM,MAX9B,CAWpBN,IAXoB;AAAA,MAWdC,KAXc,GAW8BK,MAX9B,CAWdL,KAXc;AAAA,MAWPC,IAXO,GAW8BI,MAX9B,CAWPJ,IAXO;AAAA,MAWDC,UAXC,GAW8BG,MAX9B,CAWDH,UAXC;AAAA,MAWWC,OAXX,GAW8BE,MAX9B,CAWWF,OAXX;AAAA,MAWoBC,KAXpB,GAW8BC,MAX9B,CAWoBD,KAXpB;;AAarC,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,CAAC,EAAI;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,SAAS,GAAGrB,MAAM,GAAGU,IAAzB;AACA,QAAIY,UAAU,GAAGtB,MAAM,GAAGW,KAA1B;AAEAM,IAAAA,SAAS,mBAAMD,MAAN;AAAcH,MAAAA,UAAU,EAAE;AAA1B,OAAT;AAEAd,IAAAA,gBAAgB,CAAC;AAAEsB,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,UAAU,EAAVA,UAAb;AAAyBb,MAAAA,OAAO,EAAPA;AAAzB,KAAD,CAAhB,CAAqDc,IAArD,CAA0D,UAAAC,IAAI,EAAI;AAC9D,UAAIA,IAAI,CAACT,KAAT,EAAgB;AACZE,QAAAA,SAAS,mBAAMD,MAAN;AAAcD,UAAAA,KAAK,EAAES,IAAI,CAACT;AAA1B,WAAT;AACH,OAFD,MAEO;AACHE,QAAAA,SAAS,mBACFD,MADE;AAELJ,UAAAA,IAAI,EAAE,IAFD;AAGLF,UAAAA,IAAI,EAAE,EAHD;AAILC,UAAAA,KAAK,EAAE,EAJF;AAKLF,UAAAA,OAAO,EAAE,EALJ;AAMLI,UAAAA,UAAU,EAAE,MANP;AAOLC,UAAAA,OAAO,EAAEU,IAAI,CAACV;AAPT,WAAT;AASH;AACJ,KAdD;AAeH,GAtBD;;AAwBA,MAAMW,YAAY,GAAG,SAAfA,YAAe,CAAAf,IAAI;AAAA,WAAI,UAAAS,CAAC,EAAI;AAAA;;AAC9BF,MAAAA,SAAS,mBAAMD,MAAN,wDAAeN,IAAf,EAAsBS,CAAtB,4CAAgC,KAAhC,8CAAgD,KAAhD,iDAAmE,cAAnE,oBAAT;AACH,KAFwB;AAAA,GAAzB;;AAIA,MAAMO,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,WAAMZ,OAAO,IAAI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAjB;AAAA,GAA3B;;AAEA,MAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WACrB;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEb,KAAK,GAAG,EAAH,GAAQ;AAAxB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KADL,CADqB;AAAA,GAAzB;;AAMA,MAAMc,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,QAAQ,EAAEX,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,cAAc,EAAC,UAAtD;AAAiE,MAAA,KAAK,EAAET,OAAxE;AAAiF,MAAA,QAAQ,EAAEgB,YAAY,CAAC,SAAD,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,UALJ,CADJ;AASH,GAVD;;AAYA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,kBAAkB,EADvB,EAEKC,gBAAgB,EAFrB,EAGKE,WAAW,EAHhB,CADJ;AAOH,CApED;;AAsEA,eAAetB,WAAf","sourcesContent":["import { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { emailContactForm } from '../../actions/form';\r\nimport { isAuth } from '../../actions/auth';\r\nimport { Form, FormGroup, FormControl, ControlLabel, Button, Icon } from 'rsuite';\r\n\r\nconst ContactForm = ({ authorEmail }) => {\r\n    const [values, setValues] = useState({\r\n        message: '',\r\n        name: '',\r\n        email: '',\r\n        sent: false,\r\n        buttonText: 'Send Message',\r\n        success: false,\r\n        error: false\r\n    });\r\n\r\n    const { message, name, email, sent, buttonText, success, error } = values;\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        let send_name = isAuth().name\r\n        let send_email = isAuth().email\r\n        \r\n        setValues({ ...values, buttonText: 'Sending...' });\r\n\r\n        emailContactForm({ send_name, send_email, message }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    sent: true,\r\n                    name: '',\r\n                    email: '',\r\n                    message: '',\r\n                    buttonText: 'Sent',\r\n                    success: data.success\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, [name]: e, error: false, success: false, buttonText: 'Send Message' });\r\n    };\r\n\r\n    const showSuccessMessage = () => success && <div className=\"alert alert-info\">Thank you for contacting us.</div>;\r\n\r\n    const showErrorMessage = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const contactForm = () => {\r\n        return (\r\n            <Form fluid onSubmit={clickSubmit}>\r\n                <FormGroup>\r\n                    <ControlLabel>Message</ControlLabel>\r\n                    <FormControl rows={10} name=\"textarea\" componentClass=\"textarea\" value={message} onChange={handleChange('message')} />\r\n                </FormGroup>\r\n                <Button color=\"blue\" type=\"submit\"><Icon icon=\"send\"  /> Send</Button>\r\n            </Form>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {showSuccessMessage()}\r\n            {showErrorMessage()}\r\n            {contactForm()}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}
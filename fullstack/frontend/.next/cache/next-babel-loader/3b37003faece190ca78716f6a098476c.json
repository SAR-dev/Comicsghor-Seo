{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\pages\\\\blogs\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\nimport { useState, useEffect } from 'react';\nimport { singleBlog, listRelated } from '../../actions/blog';\nimport { API, DOMAIN, APP_NAME, FB_APP_ID } from '../../config';\nimport renderHTML from 'react-render-html';\nimport moment from 'moment';\nimport SmallCard from '../../components/blog/SmallCard';\nimport Img from 'react-image';\nimport { Grid, Row, Col, Loader, Icon, TagGroup, Tag } from 'rsuite';\n\nconst SingleBlog = ({\n  blog,\n  query\n}) => {\n  const {\n    0: related,\n    1: setRelated\n  } = useState([]);\n  const {\n    0: imgur,\n    1: setImgur\n  } = useState([]);\n\n  const loadRelated = () => {\n    listRelated({\n      blog\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setRelated(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadRelated();\n  }, []);\n\n  const head = () => __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, blog.title, \" | \", APP_NAME), __jsx(\"meta\", {\n    name: \"description\",\n    content: blog.mdesc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${DOMAIN}/blogs/${query.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${blog.title}| ${APP_NAME}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: blog.mdesc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"webiste\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${DOMAIN}/blogs/${query.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: `${APP_NAME}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: `${API}/blog/photo/${blog.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image:secure_url\",\n    ccontent: `${API}/blog/photo/${blog.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image:type\",\n    content: \"image/jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"fb:app_id\",\n    content: `${FB_APP_ID}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n\n  const showBlogCategories = blog => blog.categories.map((c, i) => __jsx(Link, {\n    key: i,\n    href: `/categories/${c.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"blog-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, c.name)));\n\n  const showBlogTags = blog => blog.tags.map((t, i) => __jsx(Tag, {\n    style: {\n      backgroundColor: '#ccc'\n    },\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/tags/${t.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"small-tag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, t.name))));\n\n  const showRelatedBlog = () => {\n    return related.map((blog, i) => __jsx(\"article\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(SmallCard, {\n      blog: blog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  };\n\n  const blogImages = () => {\n    let temp = [];\n    blog.image[0].split(',').forEach((imgur, i) => {\n      temp.push(`https://i.imgur.com/${imgur}h.png`);\n    });\n    setImgur(temp);\n    console.log(temp);\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, head(), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Grid, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(Col, {\n    xs: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Grid, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Row, {\n    className: \"show-grid blog-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, blog.title), __jsx(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Img, {\n    className: \"blog-main-image\",\n    src: `${API}/blog/photo/${blog.slug}`,\n    loader: __jsx(Loader, {\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"text-center my-2 grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"user\",\n    className: \"pr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), \" \", blog.postedBy.name, ' ', __jsx(Icon, {\n    icon: \"calendar\",\n    className: \"px-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), ' ', moment(blog.updatedAt).fromNow(), showBlogCategories(blog), __jsx(TagGroup, {\n    className: \"mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, showBlogTags(blog)))), __jsx(Col, {\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, renderHTML(blog.body))), __jsx(Col, {\n    xs: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, console.log(imgur)))))), __jsx(Col, {\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, showRelatedBlog()))))))));\n};\n\nSingleBlog.getInitialProps = ({\n  query\n}) => {\n  return singleBlog(query.slug).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      // console.log('GET INITIAL PROPS IN SINGLE BLOG', data);\n      return {\n        blog: data,\n        query\n      };\n    }\n  });\n};\n\nexport default SingleBlog;","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/pages/blogs/[slug].js"],"names":["Head","Link","Layout","useState","useEffect","singleBlog","listRelated","API","DOMAIN","APP_NAME","FB_APP_ID","renderHTML","moment","SmallCard","Img","Grid","Row","Col","Loader","Icon","TagGroup","Tag","SingleBlog","blog","query","related","setRelated","imgur","setImgur","loadRelated","then","data","error","console","log","head","title","mdesc","slug","showBlogCategories","categories","map","c","i","name","showBlogTags","tags","t","backgroundColor","showRelatedBlog","blogImages","temp","image","split","forEach","push","postedBy","updatedAt","fromNow","body","getInitialProps"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\nimport { useState, useEffect } from 'react';\nimport { singleBlog, listRelated } from '../../actions/blog';\nimport { API, DOMAIN, APP_NAME, FB_APP_ID } from '../../config';\nimport renderHTML from 'react-render-html';\nimport moment from 'moment';\nimport SmallCard from '../../components/blog/SmallCard';\nimport Img from 'react-image';\n\nimport { Grid, Row, Col, Loader, Icon, TagGroup, Tag } from 'rsuite';\n\nconst SingleBlog = ({ blog, query }) => {\n\tconst [ related, setRelated ] = useState([]);\n\tconst [ imgur, setImgur ] = useState([]);\n\n\tconst loadRelated = () => {\n\t\tlistRelated({ blog }).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetRelated(data);\n\t\t\t}\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tloadRelated();\n\t}, []);\n\n\tconst head = () => (\n\t\t<Head>\n\t\t\t<title>\n\t\t\t\t{blog.title} | {APP_NAME}\n\t\t\t</title>\n\t\t\t<meta name=\"description\" content={blog.mdesc} />\n\t\t\t<link rel=\"canonical\" href={`${DOMAIN}/blogs/${query.slug}`} />\n\t\t\t<meta property=\"og:title\" content={`${blog.title}| ${APP_NAME}`} />\n\t\t\t<meta property=\"og:description\" content={blog.mdesc} />\n\t\t\t<meta property=\"og:type\" content=\"webiste\" />\n\t\t\t<meta property=\"og:url\" content={`${DOMAIN}/blogs/${query.slug}`} />\n\t\t\t<meta property=\"og:site_name\" content={`${APP_NAME}`} />\n\n\t\t\t<meta property=\"og:image\" content={`${API}/blog/photo/${blog.slug}`} />\n\t\t\t<meta property=\"og:image:secure_url\" ccontent={`${API}/blog/photo/${blog.slug}`} />\n\t\t\t<meta property=\"og:image:type\" content=\"image/jpg\" />\n\t\t\t<meta property=\"fb:app_id\" content={`${FB_APP_ID}`} />\n\t\t</Head>\n\t);\n\n\tconst showBlogCategories = (blog) =>\n\t\tblog.categories.map((c, i) => (\n\t\t\t<Link key={i} href={`/categories/${c.slug}`}>\n\t\t\t\t<a className=\"blog-category\">{c.name}</a>\n\t\t\t</Link>\n\t\t));\n\n\tconst showBlogTags = (blog) =>\n\t\tblog.tags.map((t, i) => (\n\t\t\t<Tag style={{ backgroundColor: '#ccc' }} key={i}>\n\t\t\t\t<Link href={`/tags/${t.slug}`}>\n\t\t\t\t\t<a className=\"small-tag\">{t.name}</a>\n\t\t\t\t</Link>\n\t\t\t</Tag>\n\t\t));\n\n\tconst showRelatedBlog = () => {\n\t\treturn related.map((blog, i) => (\n\t\t\t<article key={i}>\n\t\t\t\t<SmallCard blog={blog} />\n\t\t\t</article>\n\t\t));\n\t};\n\n\tconst blogImages = () => {\n\t\tlet temp = []\n\t\tblog.image[0].split(',').forEach((imgur, i) => {\n\t\t\ttemp.push(`https://i.imgur.com/${imgur}h.png`)\n\t\t})\n\t\tsetImgur(temp)\n\t\tconsole.log(temp)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{head()}\n\t\t\t<Layout>\n\t\t\t\t<main>\n\t\t\t\t\t<article>\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Grid fluid>\n\t\t\t\t\t\t\t\t<Row className=\"show-grid\">\n\t\t\t\t\t\t\t\t\t<Col xs={5} />\n\n\t\t\t\t\t\t\t\t\t<Col xs={14}>\n\t\t\t\t\t\t\t\t\t\t<Grid fluid>\n\t\t\t\t\t\t\t\t\t\t\t<Row className=\"show-grid blog-post\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={24}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"text-center\">{blog.title}</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"blog-main-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`${API}/blog/photo/${blog.slug}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloader={<Loader size=\"lg\" />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-center my-2 grey-text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"user\" className=\"pr-2\" /> {blog.postedBy.name}{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"calendar\" className=\"px-2\" />{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(blog.updatedAt).fromNow()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showBlogCategories(blog)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TagGroup className=\"mt-1\">{showBlogTags(blog)}</TagGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={24}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"p-3\">{renderHTML(blog.body)}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={24}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {blog.image.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tblog.image[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map((imgur, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"blog-imgur-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://i.imgur.com/${imgur}h.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloader={<Loader size=\"lg\" />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {blog.image.length > 0 && } */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(imgur)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t\t\t<Col xs={5}>{showRelatedBlog()}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</article>\n\t\t\t\t</main>\n\t\t\t</Layout>\n\t\t</React.Fragment>\n\t);\n};\n\nSingleBlog.getInitialProps = ({ query }) => {\n\treturn singleBlog(query.slug).then((data) => {\n\t\tif (data.error) {\n\t\t\tconsole.log(data.error);\n\t\t} else {\n\t\t\t// console.log('GET INITIAL PROPS IN SINGLE BLOG', data);\n\t\t\treturn { blog: data, query };\n\t\t}\n\t});\n};\n\nexport default SingleBlog;\n"]},"metadata":{},"sourceType":"module"}
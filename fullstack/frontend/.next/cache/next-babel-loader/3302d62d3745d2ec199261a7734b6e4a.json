{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAR-DEV\\\\Desktop\\\\fullstack\\\\frontend\\\\components\\\\crud\\\\BlogUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getCategories } from '../../actions/category';\nimport { getTags } from '../../actions/tag';\nimport { singleBlog, updateBlog } from '../../actions/blog';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\nimport '../../node_modules/react-quill/dist/quill.snow.css';\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\nimport { API } from '../../config';\nimport { Form, FormGroup, FormControl, ControlLabel, HelpBlock, TagPicker, FlexboxGrid, SelectPicker, Uploader, Icon, Loader, Button, ButtonToolbar, Modal } from 'rsuite';\n\nconst BlogUpdate = ({\n  router\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState([]); // categories\n\n  const {\n    0: checkedTag,\n    1: setCheckedTag\n  } = useState([]); // tags\n\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    title: '',\n    error: '',\n    success: '',\n    formData: '',\n    title: '',\n    body: ''\n  });\n  const {\n    error,\n    success,\n    formData,\n    title\n  } = values;\n  const token = getCookie('token');\n  useEffect(() => {\n    setValues(_objectSpread({}, values, {\n      formData: new FormData()\n    }));\n    initBlog();\n    initCategories();\n    initTags();\n  }, [router]);\n\n  const initBlog = () => {\n    if (router.query.slug) {\n      singleBlog(router.query.slug).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setValues(_objectSpread({}, values, {\n            title: data.title\n          }));\n          setBody(data.body);\n          setCategoriesArray(data.categories);\n          setTagsArray(data.tags);\n        }\n      });\n    }\n  };\n\n  const setCategoriesArray = blogCategories => {\n    let ca = [];\n    blogCategories.map((c, i) => {\n      ca.push(c._id);\n    });\n    setChecked(ca);\n  };\n\n  const setTagsArray = blogTags => {\n    let ta = [];\n    blogTags.map((t, i) => {\n      ta.push(t._id);\n    });\n    setCheckedTag(ta);\n  };\n\n  const initCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setCategories(data);\n      }\n    });\n  };\n\n  const initTags = () => {\n    getTags().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setTags(data);\n      }\n    });\n  };\n\n  const handleToggle = c => () => {\n    setValues(_objectSpread({}, values, {\n      error: ''\n    })); // return the first index or -1\n\n    const clickedCategory = checked.indexOf(c);\n    const all = [...checked];\n\n    if (clickedCategory === -1) {\n      all.push(c);\n    } else {\n      all.splice(clickedCategory, 1);\n    }\n\n    console.log(all);\n    setChecked(all);\n    formData.set('categories', all);\n  };\n\n  const handleTagsToggle = t => () => {\n    setValues(_objectSpread({}, values, {\n      error: ''\n    })); // return the first index or -1\n\n    const clickedTag = checkedTag.indexOf(t);\n    const all = [...checkedTag];\n\n    if (clickedTag === -1) {\n      all.push(t);\n    } else {\n      all.splice(clickedTag, 1);\n    }\n\n    console.log(all);\n    setCheckedTag(all);\n    formData.set('tags', all);\n  };\n\n  const findOutCategory = c => {\n    const result = checked.indexOf(c);\n\n    if (result !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const findOutTag = t => {\n    const result = checkedTag.indexOf(t);\n\n    if (result !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const showCategories = () => {\n    return categories && categories.map((c, i) => __jsx(\"li\", {\n      key: i,\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      onChange: handleToggle(c._id),\n      checked: findOutCategory(c._id),\n      type: \"checkbox\",\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      className: \"form-check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, c.name)));\n  };\n\n  const showTags = () => {\n    return tags && tags.map((t, i) => __jsx(\"li\", {\n      key: i,\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      onChange: handleTagsToggle(t._id),\n      checked: findOutTag(t._id),\n      type: \"checkbox\",\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      className: \"form-check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, t.name)));\n  };\n\n  const handleChange = name => e => {\n    // console.log(e.target.value);\n    const value = name === 'photo' ? e.target.files[0] : e.target.value;\n    formData.set(name, value);\n    setValues(_objectSpread({}, values, {\n      [name]: value,\n      formData,\n      error: ''\n    }));\n  };\n\n  const handleBody = e => {\n    setBody(e);\n    formData.set('body', e);\n  };\n\n  const editBlog = e => {\n    e.preventDefault();\n    updateBlog(formData, token, router.query.slug).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          title: '',\n          success: `Blog titled \"${data.title}\" is successfully updated`\n        }));\n\n        if (isAuth() && isAuth().role === 1) {\n          // Router.replace(`/admin/crud/${router.query.slug}`);\n          Router.replace(`/admin`);\n        } else if (isAuth() && isAuth().role === 0) {\n          // Router.replace(`/user/crud/${router.query.slug}`);\n          Router.replace(`/user`);\n        }\n      }\n    });\n  };\n\n  const showError = () => __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, error);\n\n  const showSuccess = () => __jsx(\"div\", {\n    className: \"alert alert-success\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, success);\n\n  const [tempTags] = useRef();\n\n  const handleTagsChange = (e, {\n    value\n  }) => {\n    formData.set('tags', e);\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, __jsx(Form, {\n    fluid: true,\n    onSubmit: editBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Post Title\")), __jsx(FormControl, {\n    placeholder: \"Give an awesome title...\",\n    value: title,\n    onChange: handleChange('title'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Required\")), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, __jsx(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"Post Body\")), __jsx(ReactQuill, {\n    modules: QuillModules,\n    formats: QuillFormats,\n    value: body,\n    placeholder: \"Write something amazing\",\n    onChange: handleBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Required\")), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, __jsx(FlexboxGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, __jsx(FlexboxGrid.Item, {\n    colspan: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, __jsx(TagPicker, {\n    block: true,\n    data: tags,\n    value: tempTags,\n    onChange: handleTagsChange,\n    placeholder: \"Select Tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), __jsx(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"Required\")), __jsx(FlexboxGrid.Item, {\n    colspan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }), __jsx(FlexboxGrid.Item, {\n    colspan: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  })))));\n};\n\nexport default withRouter(BlogUpdate);","map":{"version":3,"sources":["C:/Users/SAR-DEV/Desktop/fullstack/frontend/components/crud/BlogUpdate.js"],"names":["Link","useState","useEffect","Router","dynamic","withRouter","getCookie","isAuth","getCategories","getTags","singleBlog","updateBlog","ReactQuill","ssr","QuillModules","QuillFormats","API","Form","FormGroup","FormControl","ControlLabel","HelpBlock","TagPicker","FlexboxGrid","SelectPicker","Uploader","Icon","Loader","Button","ButtonToolbar","Modal","BlogUpdate","router","body","setBody","categories","setCategories","tags","setTags","checked","setChecked","checkedTag","setCheckedTag","values","setValues","title","error","success","formData","token","FormData","initBlog","initCategories","initTags","query","slug","then","data","console","log","setCategoriesArray","setTagsArray","blogCategories","ca","map","c","i","push","_id","blogTags","ta","t","handleToggle","clickedCategory","indexOf","all","splice","set","handleTagsToggle","clickedTag","findOutCategory","result","findOutTag","showCategories","name","showTags","handleChange","e","value","target","files","handleBody","editBlog","preventDefault","role","replace","showError","display","showSuccess","tempTags","useRef","handleTagsChange"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport { withRouter } from 'next/router';\r\nimport { getCookie, isAuth } from '../../actions/auth';\r\nimport { getCategories } from '../../actions/category';\r\nimport { getTags } from '../../actions/tag';\r\nimport { singleBlog, updateBlog } from '../../actions/blog';\r\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\r\nimport '../../node_modules/react-quill/dist/quill.snow.css';\r\nimport { QuillModules, QuillFormats } from '../../helpers/quill';\r\nimport { API } from '../../config';\r\n\r\nimport {\r\n\tForm,\r\n\tFormGroup,\r\n\tFormControl,\r\n\tControlLabel,\r\n\tHelpBlock,\r\n\tTagPicker,\r\n\tFlexboxGrid,\r\n\tSelectPicker,\r\n\tUploader,\r\n\tIcon,\r\n\tLoader,\r\n\tButton,\r\n\tButtonToolbar,\r\n\tModal\r\n} from 'rsuite';\r\n\r\nconst BlogUpdate = ({ router }) => {\r\n\tconst [ body, setBody ] = useState('');\r\n\r\n\tconst [ categories, setCategories ] = useState([]);\r\n\tconst [ tags, setTags ] = useState([]);\r\n\r\n\tconst [ checked, setChecked ] = useState([]); // categories\r\n\tconst [ checkedTag, setCheckedTag ] = useState([]); // tags\r\n\r\n\tconst [ values, setValues ] = useState({\r\n\t\ttitle: '',\r\n\t\terror: '',\r\n\t\tsuccess: '',\r\n\t\tformData: '',\r\n\t\ttitle: '',\r\n\t\tbody: ''\r\n\t});\r\n\r\n\tconst { error, success, formData, title } = values;\r\n\tconst token = getCookie('token');\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetValues({ ...values, formData: new FormData() });\r\n\t\t\tinitBlog();\r\n\t\t\tinitCategories();\r\n\t\t\tinitTags();\r\n\t\t},\r\n\t\t[ router ]\r\n\t);\r\n\r\n\tconst initBlog = () => {\r\n\t\tif (router.query.slug) {\r\n\t\t\tsingleBlog(router.query.slug).then((data) => {\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tconsole.log(data.error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetValues({ ...values, title: data.title });\r\n\t\t\t\t\tsetBody(data.body);\r\n\t\t\t\t\tsetCategoriesArray(data.categories);\r\n\t\t\t\t\tsetTagsArray(data.tags);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst setCategoriesArray = (blogCategories) => {\r\n\t\tlet ca = [];\r\n\t\tblogCategories.map((c, i) => {\r\n\t\t\tca.push(c._id);\r\n\t\t});\r\n\t\tsetChecked(ca);\r\n\t};\r\n\r\n\tconst setTagsArray = (blogTags) => {\r\n\t\tlet ta = [];\r\n\t\tblogTags.map((t, i) => {\r\n\t\t\tta.push(t._id);\r\n\t\t});\r\n\t\tsetCheckedTag(ta);\r\n\t};\r\n\r\n\tconst initCategories = () => {\r\n\t\tgetCategories().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetCategories(data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst initTags = () => {\r\n\t\tgetTags().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetTags(data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleToggle = (c) => () => {\r\n\t\tsetValues({ ...values, error: '' });\r\n\t\t// return the first index or -1\r\n\t\tconst clickedCategory = checked.indexOf(c);\r\n\t\tconst all = [ ...checked ];\r\n\r\n\t\tif (clickedCategory === -1) {\r\n\t\t\tall.push(c);\r\n\t\t} else {\r\n\t\t\tall.splice(clickedCategory, 1);\r\n\t\t}\r\n\t\tconsole.log(all);\r\n\t\tsetChecked(all);\r\n\t\tformData.set('categories', all);\r\n\t};\r\n\r\n\tconst handleTagsToggle = (t) => () => {\r\n\t\tsetValues({ ...values, error: '' });\r\n\t\t// return the first index or -1\r\n\t\tconst clickedTag = checkedTag.indexOf(t);\r\n\t\tconst all = [ ...checkedTag ];\r\n\r\n\t\tif (clickedTag === -1) {\r\n\t\t\tall.push(t);\r\n\t\t} else {\r\n\t\t\tall.splice(clickedTag, 1);\r\n\t\t}\r\n\t\tconsole.log(all);\r\n\t\tsetCheckedTag(all);\r\n\t\tformData.set('tags', all);\r\n\t};\r\n\r\n\tconst findOutCategory = (c) => {\r\n\t\tconst result = checked.indexOf(c);\r\n\t\tif (result !== -1) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst findOutTag = (t) => {\r\n\t\tconst result = checkedTag.indexOf(t);\r\n\t\tif (result !== -1) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst showCategories = () => {\r\n\t\treturn (\r\n\t\t\tcategories &&\r\n\t\t\tcategories.map((c, i) => (\r\n\t\t\t\t<li key={i} className=\"list-unstyled\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={handleToggle(c._id)}\r\n\t\t\t\t\t\tchecked={findOutCategory(c._id)}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tclassName=\"mr-2\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label className=\"form-check-label\">{c.name}</label>\r\n\t\t\t\t</li>\r\n\t\t\t))\r\n\t\t);\r\n\t};\r\n\r\n\tconst showTags = () => {\r\n\t\treturn (\r\n\t\t\ttags &&\r\n\t\t\ttags.map((t, i) => (\r\n\t\t\t\t<li key={i} className=\"list-unstyled\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={handleTagsToggle(t._id)}\r\n\t\t\t\t\t\tchecked={findOutTag(t._id)}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tclassName=\"mr-2\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label className=\"form-check-label\">{t.name}</label>\r\n\t\t\t\t</li>\r\n\t\t\t))\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleChange = (name) => (e) => {\r\n\t\t// console.log(e.target.value);\r\n\t\tconst value = name === 'photo' ? e.target.files[0] : e.target.value;\r\n\t\tformData.set(name, value);\r\n\t\tsetValues({ ...values, [name]: value, formData, error: '' });\r\n\t};\r\n\r\n\tconst handleBody = (e) => {\r\n\t\tsetBody(e);\r\n\t\tformData.set('body', e);\r\n\t};\r\n\r\n\tconst editBlog = (e) => {\r\n\t\te.preventDefault();\r\n\t\tupdateBlog(formData, token, router.query.slug).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetValues({ ...values, error: data.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({ ...values, title: '', success: `Blog titled \"${data.title}\" is successfully updated` });\r\n\t\t\t\tif (isAuth() && isAuth().role === 1) {\r\n\t\t\t\t\t// Router.replace(`/admin/crud/${router.query.slug}`);\r\n\t\t\t\t\tRouter.replace(`/admin`);\r\n\t\t\t\t} else if (isAuth() && isAuth().role === 0) {\r\n\t\t\t\t\t// Router.replace(`/user/crud/${router.query.slug}`);\r\n\t\t\t\t\tRouter.replace(`/user`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst showError = () => (\r\n\t\t<div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n\t\t\t{error}\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst showSuccess = () => (\r\n\t\t<div className=\"alert alert-success\" style={{ display: success ? '' : 'none' }}>\r\n\t\t\t{success}\r\n\t\t</div>\r\n    );\r\n    \r\n    const [ tempTags ] = useRef();\r\n\r\n\tconst handleTagsChange = (e, { value }) => {\r\n\t\tformData.set('tags', e);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Form fluid onSubmit={editBlog}>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\t<h6>Post Title</h6>\r\n\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tplaceholder=\"Give an awesome title...\"\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={handleChange('title')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\t<h6>Post Body</h6>\r\n\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t<ReactQuill\r\n\t\t\t\t\t\tmodules={QuillModules}\r\n\t\t\t\t\t\tformats={QuillFormats}\r\n\t\t\t\t\t\tvalue={body}\r\n\t\t\t\t\t\tplaceholder=\"Write something amazing\"\r\n\t\t\t\t\t\tonChange={handleBody}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n\t\t\t\t</FormGroup>\r\n                <FormGroup>\r\n                    <FlexboxGrid>\r\n                        <FlexboxGrid.Item colspan={11}>\r\n                            <TagPicker\r\n                                    block\r\n                                    data={tags}\r\n                                    value={tempTags}\r\n                                    onChange={handleTagsChange}\r\n                                    placeholder=\"Select Tags\"\r\n                                />\r\n\t\t\t\t\t\t\t<HelpBlock>Required</HelpBlock>\r\n                        </FlexboxGrid.Item>\r\n                        <FlexboxGrid.Item colspan={2}></FlexboxGrid.Item>\r\n                        <FlexboxGrid.Item colspan={11}></FlexboxGrid.Item>\r\n                    </FlexboxGrid>\r\n                </FormGroup>\r\n\t\t\t</Form>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(BlogUpdate);\r\n"]},"metadata":{},"sourceType":"module"}